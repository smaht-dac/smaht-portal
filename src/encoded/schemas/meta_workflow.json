{
    "title": "Meta Workflow",
    "description": "Bioinformatics pipeline to organize workflow steps",
    "$id": "/profiles/meta_workflow.json",
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "type": "object",
    "required": [
        "category",
        "name",
        "title",
        "version",
        "workflows"
    ],
    "anyOf": [
        {
            "required": [
                "submission_centers"
            ]
        },
        {
            "required": [
                "consortia"
            ]
        }
    ],
    "identifyingProperties": [
        "accession",
        "aliases",
        "uuid"
    ],
    "additionalProperties": false,
    "mixinProperties": [
        {
            "$ref": "mixins.json#/accession"
        },
        {
            "$ref": "mixins.json#/aliases"
        },
        {
            "$ref": "mixins.json#/attribution"
        },
        {
            "$ref": "mixins.json#/description"
        },
        {
            "$ref": "mixins.json#/modified"
        },
        {
            "$ref": "mixins.json#/name"
        },
        {
            "$ref": "mixins.json#/schema_version"
        },
        {
            "$ref": "mixins.json#/status"
        },
        {
            "$ref": "mixins.json#/submitted"
        },
        {
            "$ref": "mixins.json#/tags"
        },
        {
            "$ref": "mixins.json#/title"
        },
        {
            "$ref": "mixins.json#/uuid"
        },
        {
            "$ref": "mixins.json#/version"
        }
    ],
    "properties": {
        "schema_version": {
            "default": "2"
        },
        "accession": {
            "accessionType": "MW"
        },
        "category": {
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "type": "string",
                "enum": [
                    "Alignment",
                    "Format Conversion",
                    "Read Manipulation",
                    "Quality Control",
                    "Variant Calling",
                    "Variant Manipulation"
                ]
            }
        },
        "previous_versions": {
            "$merge": "encoded_core:schemas/meta_workflow.json#/properties/previous_version"
        },
        "version_upgrade_log": {
            "$merge": "encoded_core:schemas/meta_workflow.json#/properties/version_upgrade_log"
        },
        "workflows": {
            "title": "Workflows",
            "type": "array",
            "minItems": 1,
            "items": {
                "title": "Workflow",
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "workflow",
                    "input",
                    "config"
                ],
                "properties": {
                    "config": {
                        "$merge": "workflow.json#/properties/tibanna_config"
                    },
                    "custom_pf_fields": {
                        "title": "Custom PF fields",
                        "description": "Custom fields to be added to specified processed file items through Tibanna",
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "comment": "ToDo: Make these properties sharable directly without needing to update here and in OutputFile schema",
                            "additional_properties": false,
                            "properties": {
                                "alignment_details": {
                                    "$merge": "encoded:schemas/mixins.json#/alignment_details/alignment_details"
                                },
                                "data_category": {
                                    "$merge": "encoded:schemas/file.json#/properties/data_category"
                                },
                                "data_type": {
                                    "$merge": "encoded:schemas/file.json#/properties/data_type"
                                },
                                "description": {
                                    "$merge": "encoded:schemas/mixins.json#/description/description"
                                },
                                "output_status": {
                                    "$merge": "output_file.json#/properties/output_status"
                                },
                                "reference_genome": {
                                    "$merge": "encoded:schemas/mixins.json#/reference_genome/reference_genome"
                                },
                                "s3_lifecycle_category": {
                                    "$merge": "encoded:schemas/file.json#/properties/s3_lifecycle_category"
                                },
                                "software": {
                                    "$merge": "encoded:schemas/mixins.json#/file_links/software"
                                }
                            }
                        }
                    },
                    "dependencies": {
                        "title": "Dependencies",
                        "description": "forced dependencies (other than deduced from input-output connections)",
                        "type": "array",
                        "minItems": 1,
                        "uniqueItems": true,
                        "items": {
                            "title": "Dependency",
                            "description": "One of the forced dependencies",
                            "type": "string"
                        }
                    },
                    "input": {
                        "$merge": "encoded:schemas/mixins.json#/meta_workflow_input/meta_workflow_input"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the workflow, unique within the meta workflow",
                        "type": "string"
                    },
                    "shards": {
                        "title": "Shards",
                        "type": "array",
                        "minItems": 1,
                        "items": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    },
                    "workflow": {
                        "title": "Workflow",
                        "description": "Link to Workflow",
                        "type": "string",
                        "linkTo": "Workflow"
                    }
                }
            }
        },
        "input": {
            "title": "Input Arguments",
            "description": "Global input arguments of the meta-workflow",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "title": "Input Argument",
                "description": "Individual global input argument of the MetaWorkflow",
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "argument_name",
                    "argument_type"
                ],
                "if": {
                    "$merge": "encoded:schemas/mixins.json#/meta_workflow_input/meta_workflow_input/items/if"
                },
                "then": {
                    "required": [
                        "value"
                    ],
                    "$merge": "encoded:schemas/mixins.json#/meta_workflow_input/meta_workflow_input/items/then"
                },
                "anyOf": [
                    {
                        "required": [
                            "value"
                        ]
                    },
                    {
                        "required": [
                            "value_type"
                        ]
                    },
                    {
                        "required": [
                            "files"
                        ]
                    },
                    {
                        "required": [
                            "dimensionality"
                        ]
                    }
                ],
                "properties": {
                    "argument_name": {
                        "$merge": "encoded:schemas/mixins.json#/meta_workflow_input/meta_workflow_input/items/properties/argument_name"
                    },
                    "argument_type": {
                        "$merge": "encoded:schemas/mixins.json#/meta_workflow_input/meta_workflow_input/items/properties/argument_type"
                    },
                    "value": {
                        "$merge": "encoded:schemas/mixins.json#/meta_workflow_input/meta_workflow_input/items/properties/value"
                    },
                    "value_type": {
                        "$merge": "encoded:schemas/mixins.json#/meta_workflow_input/meta_workflow_input/items/properties/value_type"
                    },
                    "files": {
                        "title": "Default files",
                        "description": "Default file item(s) of the file argument",
                        "type": "array",
                        "minItems": 1,
                        "items": {
                            "title": "Default Files",
                            "description": "A list of objects describing default input file items",
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                                "file"
                            ],
                            "properties": {
                                "file": {
                                    "title": "File",
                                    "type": "string",
                                    "linkTo": "File"
                                },
                                "dimension": {
                                    "title": "Dimension",
                                    "description": "Dimension of file in the input argument (unset for a singleton, '0', '1', '2'.. for a list, '0,0', '0,1' ... for a nested list)",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "dimensionality": {
                        "title": "Dimensionality",
                        "description": "The number of dimensions of input files",
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    }
                }
            }
        }
    },
    "facets": {
        "category": {
            "title": "Category"
        },
        "name": {
            "title": "Name"
        },
        "version": {
            "title": "Version"
        }
    },
    "columns": {
        "category": {
            "title": "Category"
        },
        "name": {
            "title": "Name"
        },
        "version": {
            "title": "Version"
        }
    }
}
