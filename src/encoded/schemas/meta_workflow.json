{
    "title": "Meta Workflow",
    "description": "Bioinformatics pipeline to organize workflow steps",
    "$id": "/profiles/meta_workflow.json",
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "type": "object",
    "required": [
        "category",
        "name",
        "title",
        "version",
        "workflows"
    ],
    "anyOf": [
        {
            "required": [
                "submission_centers"
            ]
        },
        {
            "required": [
                "consortia"
            ]
        }
    ],
    "identifyingProperties": [
        "accession",
        "aliases",
        "uuid"
    ],
    "additionalProperties": false,
    "mixinProperties": [
        {
            "$ref": "mixins.json#/accession"
        },
        {
            "$ref": "mixins.json#/aliases"
        },
        {
            "$ref": "mixins.json#/attribution"
        },
        {
            "$ref": "mixins.json#/description"
        },
        {
            "$ref": "mixins.json#/modified"
        },
        {
            "$ref": "mixins.json#/name"
        },
        {
            "$ref": "mixins.json#/schema_version"
        },
        {
            "$ref": "mixins.json#/status"
        },
        {
            "$ref": "mixins.json#/submitted"
        },
        {
            "$ref": "mixins.json#/tags"
        },
        {
            "$ref": "mixins.json#/title"
        },
        {
            "$ref": "mixins.json#/uuid"
        },
        {
            "$ref": "mixins.json#/version"
        }
    ],
    "properties": {
        "schema_version": {
            "default": "1"
        },
        "accession": {
            "accessionType": "MW"
        },
        "category": {
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "type": "string",
                "enum": [
                    "Alignment",
                    "Format Conversion",
                    "Read Manipulation",
                    "Quality Control",
                    "Variant Calling"
                ]
            }
        },
        "previous_versions": {
            "$merge": "encoded_core:schemas/meta_workflow.json#/properties/previous_version"
        },
        "version_upgrade_log": {
            "$merge": "encoded_core:schemas/meta_workflow.json#/properties/version_upgrade_log"
        },
        "workflows": {
            "title": "Workflows",
            "type": "array",
            "minItems": 1,
            "items": {
                "title": "Workflow",
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "name",
                    "workflow",
                    "input",
                    "config"
                ],
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Name of the workflow, unique within the meta workflow",
                        "type": "string"
                    },
                    "workflow": {
                        "title": "Workflow",
                        "description": "Link to Workflow",
                        "type": "string",
                        "linkTo": "Workflow"
                    },
                    "input": {
                        "title": "Workflow Inputs",
                        "type": "array",
                        "minItems": 1,
                        "items": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                                "argument_name",
                                "argument_type"
                            ],
                            "oneOf": [
                                {
                                    "required": [
                                        "value"
                                    ]
                                },
                                {
                                    "required": [
                                        "value_type"
                                    ]
                                }
                            ],
                            "properties": {
                                "argument_name": {
                                    "title": "Input Argument Name",
                                    "type": "string"
                                },
                                "argument_type": {
                                    "title": "Input Argument type",
                                    "description": "input argument type (either file or parameter)",
                                    "type": "string",
                                    "enum": [
                                        "file",
                                        "parameter"
                                    ]
                                },
                                "value": {
                                    "title": "Value",
                                    "description": "a specific input parameter value",
                                    "type": [
                                        "string",
                                        "integer",
                                        "number",
                                        "boolean",
                                        "array",
                                        "object"
                                    ]
                                },
                                "value_type": {
                                    "title": "Expected Value Type",
                                    "description": "Expected type of the specific input parameter value",
                                    "type": "string",
                                    "enum": [
                                        "string",
                                        "integer",
                                        "float",
                                        "boolean",
                                        "array",
                                        "object"
                                    ]
                                },
                                "source": {
                                    "title": "Source Workflow",
                                    "description": "Where this input file came from (source workflow name). If this field is null or undefined, the input is global and not from another workflow's output.",
                                    "type": "string"
                                },
                                "source_argument_name": {
                                    "title": "Argument name in the Source Workflow",
                                    "description": "Output argument name in the source workflow",
                                    "type": "string"
                                },
                                "scatter": {
                                    "title": "Scatter",
                                    "description": "The input dimension decrease if scattered into mutiple runs (default: not set)",
                                    "type": "integer"
                                },
                                "gather": {
                                    "title": "Gather",
                                    "description": "The input dimension increase from multiple runs of the source workflow (default: not set)",
                                    "type": "integer"
                                },
                                "extra_dimension": {
                                    "title": "Extra Dimension",
                                    "description": "The extra input dimension increase other than that defined by gather (default: not set)",
                                    "type": "integer"
                                },
                                "mount": {
                                    "title": "Mount",
                                    "description": "Whether the input is mounted",
                                    "type": "boolean"
                                },
                                "rename": {
                                    "title": "Rename",
                                    "description": "What the input should be renamed to when downloaded to EC2 for execution",
                                    "type": "string"
                                },
                                "unzip": {
                                    "title": "Unzip",
                                    "description": "How the input should be decompressed when downloaded to EC2 for execution",
                                    "type": "string",
                                    "enum": [
                                        "gz",
                                        "bz2"
                                    ]
                                }
                            }
                        }
                    },
                    "dependencies": {
                        "title": "Dependencies",
                        "description": "forced dependencies (other than deduced from input-output connections)",
                        "type": "array",
                        "minItems": 1,
                        "uniqueItems": true,
                        "items": {
                            "title": "Dependency",
                            "description": "One of the forced dependencies",
                            "type": "string"
                        }
                    },
                    "config": {
                        "$merge": "workflow.json#/properties/tibanna_config"
                    },
                    "custom_pf_fields": {
                        "title": "Custom PF fields",
                        "description": "Custom fields to be added to specified processed file items through Tibanna",
                        "type": "object",
                        "additionalProperties": {
                            "$merge": "output_file.json#/properties"
                        }
                    }
                }
            }
        },
        "input": {
            "title": "Input Arguments",
            "description": "Global input arguments of the meta-workflow",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "title": "Input Argument",
                "description": "Individual global input argument of the MetaWorkflow",
                "type": "object",
                "additionalProperties": false,
                "required": [],
                "properties": {
                    "argument_name": {
                        "title": "Argument Name",
                        "description": "Name of the workflow, unique within the meta workflow",
                        "type": "string"
                    },
                    "argument_type": {
                        "title": "Argument Type",
                        "description": "Name of the workflow, unique within the meta workflow",
                        "type": "string"
                    },
                    "value": {
                        "title": "Value",
                        "description": "a specific input parameter value",
                        "type": [
                            "string",
                            "integer",
                            "number",
                            "boolean",
                            "array",
                            "object"
                        ]
                    },
                    "value_type": {
                        "title": "Expected Value Type",
                        "description": "Expected type of the specific input parameter value",
                        "type": "string",
                        "enum": [
                            "string",
                            "integer",
                            "float",
                            "boolean",
                            "array",
                            "object"
                        ]
                    },
                    "files": {
                        "title": "Default files",
                        "description": "Default file item(s) of the file argument",
                        "type": "array",
                        "minItems": 1,
                        "items": {
                            "title": "Default Files",
                            "description": "A list of objects describing default input file items",
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                                "file",
                                "dimension"
                            ],
                            "properties": {
                                "file": {
                                    "title": "File",
                                    "type": "string",
                                    "linkTo": "File"
                                },
                                "dimension": {
                                    "title": "Dimension",
                                    "description": "Dimension of file in the input argument (unset for a singleton, '0', '1', '2'.. for a list, '0,0', '0,1' ... for a nested list)",
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "dimensionality": {
                        "title": "Dimensionality",
                        "description": "The number of dimensions of input files",
                        "type": "integer",
                        "enum": [
                            1,
                            2
                        ]
                    }
                }
            }
        }
    }
}
