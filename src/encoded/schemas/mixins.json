{
    "accession": {
        "accession": {
            "title": "Accession",
            "description": "A unique identifier to be used to reference the object.",
            "internal_comment": "Only admins are allowed to set or update this value.",
            "exclude_from": [
                "FFedit-create"
            ],
            "type": "string",
            "format": "accession",
            "permission": "restricted_fields",
            "serverDefault": "accession"
        },
        "alternate_accessions": {
            "title": "Alternate Accessions",
            "description": "Accessions previously assigned to objects that have been merged with this object.",
            "type": "array",
            "internal_comment": "Only admins are allowed to set or update this value.",
            "items": {
                "title": "Alternate Accession",
                "description": "An accession previously assigned to an object that has been merged with this object.",
                "type": "string",
                "permission": "restricted_fields",
                "format": "accession"
            }
        }
    },
    "aliases": {
        "aliases": {
            "title": "Aliases",
            "description": "Institution-specific ID (e.g. bgm:cohort-1234-a).",
            "type": "array",
            "comment": "Colon separated lab name and lab identifier, no slash. (e.g. dcic-lab:42).",
            "uniqueItems": true,
            "ff_flag": "clear clone",
            "permission": "restricted_fields",
            "items": {
                "uniqueKey": "alias",
                "title": "ID Alias",
                "description": "Institution-specific ID (e.g. bgm:cohort-1234-a).",
                "type": "string",
                "pattern": "^[^\\s\\\\\\/]+:[^\\s\\\\\\/]+$"
            }
        }
    },
    "alignment_details": {
        "alignment_details": {
            "title": "Data Details",
            "description": "Additional details about sequencing alignment",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "type": "string",
                "enum": [
                    "Phased",
                    "Sorted"
                ]
            }
        }
    },
    "alternative_ids": {
        "alternative_ids": {
            "title": "Alternative identifiers",
            "comment": "If an item generated from an owl file is deprecated/obsoleted in the ontology then often the id for the item is added to the new rdf that should replace it as an alternative id",
            "description": "Alternative id - often referring to a deprecated object which this item replaces.",
            "type": "array",
            "uniqueItems": true,
            "items": {
                "title": "Alternative identifier",
                "description": "An alternative identifier from this resource - referring to an object that has been deprecated/obsoleted.",
                "type": "string"
            }
        }
    },
    "attachment": {
        "attachment": {
            "title": "Attached File",
            "description": "File attached to this Item.",
            "type": "object",
            "additionalProperties": false,
            "formInput": "file",
            "attachment": true,
            "ff_flag": "clear clone",
            "properties": {
                "download": {
                    "title": "File Name",
                    "description": "File Name of the attachment.",
                    "type": "string"
                },
                "href": {
                    "internal_comment": "Internal webapp URL for document file",
                    "title": "href",
                    "description": "Path to download the file attached to this Item.",
                    "type": "string"
                },
                "type": {
                    "title": "Media Type",
                    "type": "string",
                    "enum": [
                        "application/msword",
                        "application/vnd.ms-excel",
                        "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                        "application/pdf",
                        "application/zip",
                        "application/proband+xml",
                        "text/plain",
                        "text/tab-separated-values",
                        "image/jpeg",
                        "image/tiff",
                        "image/gif",
                        "text/html",
                        "image/png",
                        "image/svs",
                        "text/autosql"
                    ]
                },
                "md5sum": {
                    "title": "MD5 Checksum",
                    "description": "Use this to ensure that your file was downloaded without errors or corruption.",
                    "type": "string",
                    "format": "md5sum"
                },
                "size": {
                    "title": "Attachment size",
                    "description": "Size of the attachment on disk",
                    "type": "integer"
                },
                "width": {
                    "title": "Image width",
                    "description": "Width of the image attached, in pixels.",
                    "type": "integer"
                },
                "height": {
                    "title": "Image height",
                    "description": "Height of the image attached, in pixels.",
                    "type": "integer"
                },
                "blob_id": {
                    "title": "Blob ID",
                    "type": "string",
                    "internal_comment": "blob storage ID. Use to like with s3/rds"
                }
            }
        }
    },
    "attribution": {
        "submission_centers": {
            "title": "Generated By",
            "description": "Submission Centers that created this item.",
            "type": "array",
            "uniqueItems": true,
            "items": {
                "type": "string",
                "linkTo": "SubmissionCenter"
            },
            "serverDefault": "user_submission_centers"
        },
        "consortia": {
            "title": "Consortia",
            "description": "Consortia associated with this item.",
            "type": "array",
            "uniqueItems": true,
            "items": {
                "type": "string",
                "linkTo": "Consortium"
            },
            "permission": "restricted_fields"
        }
    },
    "category": {
        "category": {
            "title": "Category",
            "comment": "Intended for primary classification of an item, i.e. as a property to use instead of file_type for File",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "type": "string",
                "enum": []
            }
        }
    },
    "cell_count": {
        "cell_count": {
            "title": "Cell Count",
            "description": "The number of cells in the sample to be analyzed",
            "type": "integer",
            "minimum": 1
        }
    },
    "code": {
        "code": {
            "title": "Code",
            "description": "Code used in file naming scheme",
            "type": "string",
            "permission": "restricted_fields",
            "uniqueKey": true
        }
    },
    "comments": {
        "comments": {
            "title": "Comments",
            "comment": "General comments concerning an item. For internal use only.",
            "type": "array",
            "items": {
                "type": "string"
            }
        }
    },
    "dbxrefs": {
        "dbxrefs": {
            "@type": "@id",
            "rdfs:subPropertyOf": "rdfs:seeAlso",
            "title": "External identifiers",
            "comment": "Enter as a database name:identifier eg. HGNC:PARK2",
            "description": "Unique identifiers from external resources.",
            "type": "array",
            "ff_flag": "clear clone",
            "uniqueItems": true,
            "items": {
                "title": "External identifier",
                "description": "A unique identifier from external resource.",
                "type": "string"
            }
        }
    },
    "description": {
        "description": {
            "title": "Description",
            "description": "Plain text description of the item",
            "type": "string",
            "formInput": "textarea"
        }
    },
    "documents": {
        "documents": {
            "title": "Documents",
            "description": "Documents that provide additional information (not data file).",
            "comment": "See Documents sheet or collection for existing items.",
            "type": "array",
            "uniqueItems": true,
            "items": {
                "title": "Document",
                "description": "A document that provides additional information (not data file).",
                "type": "string",
                "linkTo": "Document"
            }
        }
    },
    "external_id": {
        "external_id": {
            "title": "External ID",
            "description": "External ID for the item provided by submitter",
            "type": "string",
            "pattern": "^[A-Za-z0-9-_]{3,}$"
        }
    },
    "facets_common": {
        "consortia.display_title": {
            "title": "Consortia"
        },
        "submission_centers.display_title": {
            "title": "Submission Centers"
        }
    },
    "file_links": {
        "derived_from": {
            "title": "Derived From",
            "description": "Files used as input to create this file",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "type": "string",
                "linkTo": "File"
            }
        },
        "file_sets": {
            "title": "File Sets",
            "description": "File collections associated with this file",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "type": "string",
                "linkTo": "FileSet"
            }
        },
        "software": {
            "title": "Software",
            "description": "Software used to create this file",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "type": "string",
                "linkTo": "Software"
            }
        }
    },
    "file_release": {
        "access_status": {
            "title": "Access Status",
            "description": "Access status for the file contents",
            "comment": "Use as dummy variable for display of benchmarking files for now; has no actual implications on data access",
            "type": "string",
            "permission": "restricted_fields",
            "enum": [
                "Open",
                "Protected"
            ]
        },
        "annotated_filename": {
            "title": "Annotated Filename",
            "description": "Filename containing controlled metadata",
            "type": "string",
            "uniqueKey": true,
            "permission": "restricted_fields"
        },
        "dataset": {
            "title": "Dataset",
            "description": "Dataset associated with the file",
            "comment": "Use by front-end in search query for showing appropriate files in tables",
            "type": "string",
            "permission": "restricted_fields",
            "enum": [
                "colo829bl",
                "colo829t",
                "colo829blt_50to1",
                "colo829blt_in_silico",
                "hapmap",
                "hg002",
                "hg00438",
                "hg005",
                "hg02257",
                "hg02486",
                "hg02622",
                "lb_fibroblast",
                "lb_ipsc_1",
                "lb_ipsc_2",
                "lb_ipsc_4",
                "lb_ipsc_52",
                "lb_ipsc_60",
                "tissue"
            ]
        }
    },
    "flow_cell_details": {
        "flow_cell_barcode": {
            "title": "Flow Cell Barcode",
            "description": "Flow cell barcode for sequencing that generated this file",
            "type": "string"
        },
        "flow_cell_lane": {
            "title": "Flow Cell Lane",
            "description": "Flow cell lane for sequencing that generated this file",
            "type": "integer",
            "minimum": 1
        }
    },
    "identifier": {
        "identifier": {
            "title": "Identifier",
            "description": "Unique, identifying name for the item",
            "type": "string",
            "uniqueKey": true,
            "pattern": "^[A-Za-z0-9-_]+$",
            "minLength": 2,
            "permission": "restricted_fields"
        }
    },
    "ingestion_ids": {
        "ingestion_ids": {
            "title": "Submission IDs",
            "description": "UUIDs of the IngestionSubmission items that created/edited the item",
            "type": "array",
            "items": {
                "title": "Submission ID",
                "description": "IngestionSubmission item that created or edited the item",
                "type": "string"
            }
        }
    },
    "meta_workflow_input": {
        "meta_workflow_input": {
            "title": "Workflow Inputs",
            "type": "array",
            "minItems": 1,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "argument_name",
                    "argument_type"
                ],
                "if": {
                    "properties": {
                        "argument_type": {
                            "const": "QC ruleset"
                        }
                    }
                },
                "then": {
                    "properties": {
                        "value": {
                            "type": "object",
                            "required": [
                                "overall_quality_status_rule",
                                "qc_thresholds"
                            ],
                            "additionalProperties": false,
                            "properties": {
                                "overall_quality_status_rule": {
                                    "title": "Overall Quality Status Rule",
                                    "type": "string"
                                },
                                "qc_thresholds": {
                                    "title": "QC Thresholds",
                                    "type": "array",
                                    "minItems": 1,
                                    "items": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "required": [
                                            "id",
                                            "metric",
                                            "operator"
                                        ],
                                        "anyOf": [
                                            {
                                                "required": [
                                                    "pass_target"
                                                ]
                                            },
                                            {
                                                "required": [
                                                    "warn_target"
                                                ]
                                            },
                                            {
                                                "required": [
                                                    "fail_target"
                                                ]
                                            }
                                        ],
                                        "properties": {
                                            "id": {
                                                "title": "ID",
                                                "type": "string"
                                            },
                                            "metric": {
                                                "title": "Metric",
                                                "type": "string"
                                            },
                                            "operator": {
                                                "title": "Operator",
                                                "type": "string",
                                                "enum": [
                                                    "==",
                                                    ">",
                                                    ">=",
                                                    "<",
                                                    "<=",
                                                    "!="
                                                ]
                                            },
                                            "pass_target": {
                                                "title": "Pass Target",
                                                "type": [
                                                    "string",
                                                    "number",
                                                    "boolean"
                                                ]
                                            },
                                            "fail_target": {
                                                "title": "Fail Target",
                                                "type": [
                                                    "string",
                                                    "number",
                                                    "boolean"
                                                ]
                                            },
                                            "warn_target": {
                                                "title": "Warn Target",
                                                "type": [
                                                    "string",
                                                    "number",
                                                    "boolean"
                                                ]
                                            },
                                            "use_as_qc_flag": {
                                                "title": "Use as QC Flag",
                                                "type": "boolean"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "value_type": {
                            "type": "string",
                            "enum": [
                                "object"
                            ]
                        }
                    }
                },
                "properties": {
                    "argument_name": {
                        "title": "Input Argument Name",
                        "type": "string"
                    },
                    "argument_type": {
                        "title": "Input Argument Type",
                        "type": "string",
                        "enum": [
                            "file",
                            "parameter",
                            "QC ruleset"
                        ]
                    },
                    "value": {
                        "title": "Value",
                        "description": "a specific input parameter value",
                        "type": [
                            "string",
                            "integer",
                            "number",
                            "boolean",
                            "array",
                            "object"
                        ]
                    },
                    "value_type": {
                        "title": "Expected Value Type",
                        "description": "Expected type of the specific input parameter value",
                        "type": "string",
                        "enum": [
                            "string",
                            "integer",
                            "float",
                            "boolean",
                            "array",
                            "object"
                        ]
                    },
                    "source": {
                        "title": "Source Workflow",
                        "description": "Where this input file came from (source workflow name). If this field is null or undefined, the input is global and not from another workflow's output.",
                        "type": "string"
                    },
                    "source_argument_name": {
                        "title": "Argument name in the Source Workflow",
                        "description": "Output argument name in the source workflow",
                        "type": "string"
                    },
                    "scatter": {
                        "title": "Scatter",
                        "description": "The input dimension decrease if scattered into mutiple runs (default: not set)",
                        "type": "integer"
                    },
                    "gather": {
                        "title": "Gather",
                        "description": "The input dimension increase from multiple runs of the source workflow (default: not set)",
                        "type": "integer"
                    },
                    "gather_input": {
                        "title": "Gather Input",
                        "type": "integer",
                        "minimum": 0
                    },
                    "input_dimension": {
                        "title": "Input Dimension",
                        "description": "Extra input dimension other than that defined by scatter",
                        "type": "integer",
                        "minimum": 0
                    },
                    "extra_dimension": {
                        "title": "Extra Dimension",
                        "description": "The extra input dimension increase other than that defined by gather (default: not set)",
                        "type": "integer"
                    },
                    "mount": {
                        "title": "Mount",
                        "description": "Whether the input is mounted",
                        "type": "boolean"
                    },
                    "rename": {
                        "title": "Rename",
                        "description": "What the input should be renamed to when downloaded to EC2 for execution",
                        "type": "string"
                    },
                    "unzip": {
                        "title": "Unzip",
                        "description": "How the input should be decompressed when downloaded to EC2 for execution",
                        "type": "string",
                        "enum": [
                            "gz",
                            "bz2"
                        ]
                    }
                }
            }
        }
    },
    "meta_workflow_runs": {
        "meta_workflow_runs": {
            "title": "MetaWorkflowRuns",
            "description": "Bioinformatics analysis pipelines associated with this item",
            "type": "array",
            "items": {
                "title": "MetaWorkflowRun",
                "type": "string",
                "linkTo": "MetaWorkflowRun"
            }
        }
    },
    "modified": {
        "last_modified": {
            "title": "Last Modified",
            "exclude_from": [
                "FFedit-create"
            ],
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "date_modified": {
                    "title": "Date Modified",
                    "description": "Do not submit, value is assigned by the server. The date the object is modified.",
                    "type": "string",
                    "anyOf": [
                        {
                            "format": "date-time"
                        },
                        {
                            "format": "date"
                        }
                    ],
                    "permission": "restricted_fields"
                },
                "modified_by": {
                    "title": "Modified By",
                    "description": "Do not submit, value is assigned by the server. The user that modfied the object.",
                    "type": "string",
                    "linkTo": "User",
                    "permission": "restricted_fields"
                }
            }
        }
    },
    "n50": {
        "n50": {
            "title": "N50",
            "description": "The sequence length of the shortest read at 50% of the total sequencing dataset sorted by read length (bp)",
            "type": "number",
            "minimum": 0
        }
    },
    "name": {
        "name": {
            "title": "Name",
            "description": "Name of the item",
            "type": "string",
            "pattern": "^[A-Za-z0-9-_]+$",
            "minLength": 3,
            "comment": "Not for identifying name; use 'identifier' for that purpose.",
            "permission": "restricted_fields"
        }
    },
    "notes": {
        "notes": {
            "title": "Notes",
            "description": "Internal notes.",
            "type": "string",
            "exclude_from": [
                "FFedit-create"
            ],
            "elasticsearch_mapping_index_type": {
                "title": "Field mapping index type",
                "description": "Defines one of three types of indexing available",
                "type": "string",
                "default": "analyzed",
                "enum": [
                    "analyzed",
                    "not_analyzed",
                    "no"
                ]
            }
        }
    },
    "ontology_term": {
        "ontology_term": {
            "title": "Ontology Term",
            "type": "string",
            "linkTo": "OntologyTerm"
        }
    },
    "paired_with": {
        "paired_with": {
            "description": "Link to associated paired-end file, if applicable",
            "type": "string",
            "linkTo": "File"
        }
    },
    "parent_samples": {
        "parent_samples": {
            "title": "Parent Samples",
            "description": "Link to associated parent samples from which this sample was derived",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "type": "string",
                "linkTo": "Sample"
            }
        }
    },
    "preservation_medium": {
        "preservation_medium": {
            "title": "Preservation Medium",
            "description": "Medium used for preservation",
            "type": "string"
        }
    },
    "preservation_type": {
        "preservation_type": {
            "title": "Preservation Type",
            "description": "Method of preservation",
            "type": "string",
            "enum": [
                "Fixed",
                "Fresh",
                "Frozen",
                "Snap Frozen"
            ]
        }
    },
    "protocols": {
        "protocols": {
            "title": "Protocols",
            "description": "Protocols providing experimental details",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "permission": "restricted_fields",
            "items": {
                "type": "string",
                "linkTo": "Protocol"
            }
        }
    },
    "reads_details": {
        "read_count": {
            "title": "Submitted Read Count",
            "description": "Submitted number of reads in the file",
            "type": "integer"
        },
        "read_length_median": {
            "title": "Submitted Median Read Length",
            "description": "Submitted median read length",
            "type": "integer",
            "minimum": 0
        },
        "read_length_ninetieth_percentile": {
            "title": "Submitted Ninetieth Percentile Read Length",
            "description": "Submitted ninetieth percentile read length",
            "type": "integer",
            "minimum": 0
        },
        "read_length_tenth_percentile": {
            "title": "Submitted Tenth Percentile Read Length",
            "description": "Submitted tenth percentile read length",
            "type": "integer",
            "minimum": 0
        }
    },
    "reference_genome": {
        "reference_genome": {
            "title": "Reference Genome",
            "description": "Reference genome used for alignment",
            "type": "string",
            "linkTo": "ReferenceGenome"
        }
    },
    "schema_version": {
        "schema_version": {
            "title": "Schema Version",
            "internal_comment": "Do not submit, value is assigned by the server. The version of the JSON schema that the server uses to validate the object. Schema version indicates generation of schema used to save version to to enable upgrade steps to work. Individual schemas should set the default.",
            "type": "string",
            "exclude_from": [
                "FFedit-create"
            ],
            "pattern": "^\\d+(\\.\\d+)*$",
            "requestMethod": []
        }
    },
    "sequencing_center": {
        "sequencing_center": {
            "title": "Sequencing Center",
            "description": "Sequencing Center",
            "type": "string",
            "linkTo": "SubmissionCenter",
            "permission": "restricted_fields"
        }
    },
    "static_embeds": {
        "static_headers": {
            "title": "Static Headers",
            "description": "Array of linkTos for static sections to be displayed at the top of an item page",
            "type": "array",
            "uniqueItems": true,
            "permission": "restricted_fields",
            "items": {
                "title": "Static Header",
                "description": "Static section displayed at the top of an item page",
                "type": "string",
                "linkTo": "UserContent"
            }
        },
        "static_content": {
            "title": "Static Content",
            "description": "Array of objects containing linkTo UserContent and 'position' to be placed on Item view(s).",
            "type": "array",
            "uniqueItems": true,
            "permission": "restricted_fields",
            "items": {
                "title": "Static Content Definition",
                "description": "Link to UserContent Item plus location.",
                "type": "object",
                "required": [
                    "location",
                    "content"
                ],
                "properties": {
                    "content": {
                        "type": "string",
                        "linkTo": "UserContent",
                        "title": "Link to Content",
                        "description": "A UserContent Item."
                    },
                    "location": {
                        "type": "string",
                        "title": "Location of Content",
                        "description": "Where this content should be displayed. Item schemas could potentially define an enum to contrain values.",
                        "default": "header"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "Description or note about this content. Might be displayed as a footnote or caption, if applicable for view."
                    }
                }
            }
        }
    },
    "status": {
        "status": {
            "title": "Status",
            "type": "string",
            "default": "in review",
            "permission": "restricted_fields",
            "enum": [
                "public",
                "draft",
                "released",
                "in review",
                "obsolete",
                "deleted",
                "restricted"
            ]
        }
    },
    "submitted": {
        "date_created": {
            "rdfs:subPropertyOf": "dc:created",
            "title": "Date Created",
            "exclude_from": [
                "FFedit-create"
            ],
            "type": "string",
            "anyOf": [
                {
                    "format": "date-time"
                },
                {
                    "format": "date"
                }
            ],
            "serverDefault": "now",
            "permission": "restricted_fields"
        },
        "submitted_by": {
            "rdfs:subPropertyOf": "dc:creator",
            "title": "Submitted By",
            "exclude_from": [
                "FFedit-create"
            ],
            "type": "string",
            "linkTo": "User",
            "serverDefault": "userid",
            "permission": "restricted_fields"
        }
    },
    "submitted_id": {
        "submitted_id": {
            "title": "Submitted ID",
            "description": "Unique identifier for the item assigned by the submitter",
            "type": "string",
            "uniqueKey": "submitted_id",
            "submissionComment": "Starting characters must be the code of the submitter's submission center."
        }
    },
    "supplementary_files": {
        "other_processed_files": {
            "title": "Supplementary Processed Files",
            "description": "Additional, archived or preliminary processed filesets that are derived from files in this experiment set.",
            "type": "array",
            "exclude_from": [
                "FFedit-create"
            ],
            "items": {
                "title": "Supplementary Processed Filesets",
                "description": "Fileset metadata",
                "type": "object",
                "required": [
                    "title",
                    "files"
                ],
                "properties": {
                    "title": {
                        "title": "Fileset Title",
                        "type": "string"
                    },
                    "type": {
                        "title": "Fileset Type",
                        "type": "string",
                        "enum": [
                            "supplementary",
                            "archived",
                            "preliminary",
                            "visualization"
                        ]
                    },
                    "description": {
                        "title": "Description",
                        "type": "string"
                    },
                    "files": {
                        "title": "Files",
                        "type": "array",
                        "items": {
                            "title": "File",
                            "type": "string",
                            "linkTo": "FileProcessed"
                        }
                    }
                }
            }
        }
    },
    "tags": {
        "tags": {
            "title": "Tags",
            "description": "Key words that can tag an item - useful for filtering.",
            "type": "array",
            "uniqueItems": true,
            "ff_flag": "clear clone",
            "permission": "restricted_fields",
            "items": {
                "title": "Tag",
                "description": "A tag for the item.",
                "type": "string",
                "minLength": 1,
                "maxLength": 50,
                "pattern": "^[a-zA-Z0-9|_-]+$"
            }
        }
    },
    "title": {
        "title": {
            "title": "Title",
            "description": "Title for the item",
            "type": "string",
            "minLength": 3
        }
    },
    "url": {
        "url": {
            "title": "URL",
            "description": "An external resource with additional information about the item",
            "type": "string",
            "format": "uri"
        }
    },
    "uuid": {
        "uuid": {
            "title": "UUID",
            "type": "string",
            "format": "uuid",
            "exclude_from": [
                "FFedit-create"
            ],
            "serverDefault": "uuid4",
            "permission": "restricted_fields",
            "requestMethod": "POST"
        }
    },
    "variant_type": {
        "variant_type": {
            "title": "Variant Type",
            "description": "Variant types included in the file",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "type": "string",
                "enum": [
                    "Copy Number Variant",
                    "Insertion-deletion",
                    "Mobile Element Insertion",
                    "Single Nucleotide Variant",
                    "Structural Variant"
                ]
            }
        }
    },
    "version": {
        "version": {
            "title": "Version",
            "description": "Version for the item",
            "type": "string",
            "pattern": "^([0-9]+.)*[0-9]+$"
        }
    }
}