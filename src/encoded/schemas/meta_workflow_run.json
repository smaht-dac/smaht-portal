{
    "title": "Meta Workflow Run",
    "description": "Run of a bioinformatics pipeline",
    "$id": "/profiles/meta_workflow_run.json",
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "type": "object",
    "required": [
        "meta_workflow"
    ],
    "anyOf": [
        {
            "required": [
                "submission_centers"
            ]
        },
        {
            "required": [
                "consortia"
            ]
        }
    ],
    "identifyingProperties": [
        "accession",
        "aliases",
        "uuid"
    ],
    "additionalProperties": false,
    "mixinProperties": [
        {
            "$ref": "mixins.json#/accession"
        },
        {
            "$ref": "mixins.json#/aliases"
        },
        {
            "$ref": "mixins.json#/attribution"
        },
        {
            "$ref": "mixins.json#/description"
        },
        {
            "$ref": "mixins.json#/modified"
        },
        {
            "$ref": "mixins.json#/schema_version"
        },
        {
            "$ref": "mixins.json#/status"
        },
        {
            "$ref": "mixins.json#/submitted"
        },
        {
            "$ref": "mixins.json#/tags"
        },
        {
            "$ref": "mixins.json#/title"
        },
        {
            "$ref": "mixins.json#/uuid"
        }
    ],
    "properties": {
        "schema_version": {
            "default": "1"
        },
        "accession": {
            "accessionType": "MR"
        },
        "meta_workflow": {
            "$merge": "encoded_core:schemas/meta_workflow_run.json#/properties/meta_workflow"
        },
        "final_status": {
            "$merge": "encoded_core:schemas/meta_workflow_run.json#/properties/final_status"
        },
        "failed_jobs": {
            "$merge": "encoded_core:schemas/meta_workflow_run.json#/properties/failed_jobs"
        },
        "cost": {
            "$merge": "encoded_core:schemas/meta_workflow_run.json#/properties/cost"
        },
        "file_sets": {
            "title": "File Sets",
            "description": "File collections associated with this MetaWorkflowRun",
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "type": "string",
                "linkTo": "FileSet"
            }
        },
        "workflow_runs": {
            "title": "Workflow Runs",
            "description": "The list of workflow runs with their status and output files",
            "type": "array",
            "items": {
                "title": "Workflow Run",
                "description": "Individual workflow run the meta workflow run.",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "$merge": "encoded_core:schemas/meta_workflow_run.json#/properties/workflow_runs/items/properties/name"
                    },
                    "status": {
                        "$merge": "encoded_core:schemas/meta_workflow_run.json#/properties/workflow_runs/items/properties/status"
                    },
                    "shard": {
                        "$merge": "encoded_core:schemas/meta_workflow_run.json#/properties/workflow_runs/items/properties/shard"
                    },
                    "dependencies": {
                        "$merge": "encoded_core:schemas/meta_workflow_run.json#/properties/workflow_runs/items/properties/dependencies",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    "output": {
                        "$merge": "encoded_core:schemas/meta_workflow_run.json#/properties/workflow_runs/items/properties/output",
                        "items": {
                            "$merge": "encoded_core:schemas/meta_workflow_run.json#/properties/workflow_runs/items/properties/output/items",
                            "required": [
                                "argument_name",
                                "file"
                            ]
                        }
                    },
                    "workflow_run": {
                        "$merge": "encoded_core:schemas/meta_workflow_run.json#/properties/workflow_runs/items/properties/workflow_run"
                    },
                    "job_id": {
                        "$merge": "encoded_core:schemas/meta_workflow_run.json#/properties/workflow_runs/items/properties/jobid"
                    }
                }
            }
        },
        "input": {
            "title": "Input",
            "description": "The input files and parameters used for the meta workflow run.",
            "type": "array",
            "minItems": 1,
            "items": {
                "title": "Input",
                "description": "Input files or parameters associated with an input argument of the meta workflow run.",
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "argument_name",
                    "argument_type"
                ],
                "oneOf": [
                    {
                        "required": [
                            "value"
                        ]
                    },
                    {
                        "required": [
                            "files"
                        ]
                    }
                ],
                "if": {
                    "$merge": "encoded:schemas/meta_workflow.json#/properties/input/items/if"
                },
                "then": {
                    "$merge": "encoded:schemas/meta_workflow.json#/properties/input/items/then"
                },
                "properties": {
                    "argument_name": {
                        "$merge": "encoded:schemas/mixins.json#/meta_workflow_input/meta_workflow_input/items/properties/argument_name"
                    },
                    "argument_type": {
                        "$merge": "encoded:schemas/mixins.json#/meta_workflow_input/meta_workflow_input/items/properties/argument_type"
                    },
                    "value": {
                        "$merge": "encoded:schemas/mixins.json#/meta_workflow_input/meta_workflow_input/items/properties/value"
                    },
                    "files": {
                        "$merge": "encoded:schemas/meta_workflow.json#/properties/input/items/properties/files"
                    }
                }
            }
        }
    },
    "facets": {
        "meta_workflow.category": {
            "title": "Category"
        },
        "meta_workflow.name": {
            "title": "Meta Workflow"
        },
        "meta_workflow.version": {
            "title": "Version"
        },
        "final_status": {
            "title": "Run Status"
        },
        "cost": {
            "title": "Cost",
            "aggregation_type": "stats"
        }
    },
    "columns": {
        "meta_workflow.category": {
            "title": "Category"
        },
        "meta_workflow.name": {
            "title": "Meta Workflow"
        },
        "meta_workflow.version": {
            "title": "Version"
        },
        "final_status": {
            "title": "Run Status"
        },
        "cost": {
            "title": "Cost"
        }
    }
}
