# generated by datamodel-codegen:
#   filename:  submitted_file.json
#   timestamp: 2024-03-15T18:19:20+00:00

from __future__ import annotations

from datetime import date
from enum import Enum
from typing import Any, Dict, List, Optional, Union
from uuid import UUID

from pydantic import AwareDatetime, BaseModel, ConfigDict, Field, RootModel, constr


class Status(Enum):
    uploading = 'uploading'
    uploaded = 'uploaded'
    upload_failed = 'upload failed'
    to_be_uploaded_by_workflow = 'to be uploaded by workflow'
    released = 'released'
    in_review = 'in review'
    obsolete = 'obsolete'
    archived = 'archived'
    deleted = 'deleted'
    public = 'public'
    restricted = 'restricted'


class DataCategoryEnum(Enum):
    Genome_Region = 'Genome Region'
    Quality_Control = 'Quality Control'
    Reference_Genome = 'Reference Genome'
    Sequencing_Reads = 'Sequencing Reads'
    Germline_Variant_Calls = 'Germline Variant Calls'
    Somatic_Variant_Calls = 'Somatic Variant Calls'


class DataTypeEnum(Enum):
    Aligned_Reads = 'Aligned Reads'
    Image = 'Image'
    Index = 'Index'
    Reference_Sequence = 'Reference Sequence'
    Sequence_Interval = 'Sequence Interval'
    Statistics = 'Statistics'
    Unaligned_Reads = 'Unaligned Reads'
    CNV = 'CNV'
    Indel = 'Indel'
    MEI = 'MEI'
    SNV = 'SNV'
    SV = 'SV'


class S3LifecycleCategory(Enum):
    ignore = 'ignore'
    long_term_access = 'long_term_access'
    long_term_access_long_term_archive = 'long_term_access_long_term_archive'
    long_term_archive = 'long_term_archive'
    no_storage = 'no_storage'
    short_term_access = 'short_term_access'
    short_term_access_long_term_archive = 'short_term_access_long_term_archive'
    short_term_archive = 'short_term_archive'


class S3LifecycleStatus(Enum):
    deep_archive = 'deep archive'
    deleted = 'deleted'
    glacier = 'glacier'
    infrequent_access = 'infrequent access'
    standard = 'standard'


class Tag(RootModel[constr(pattern=r'^[a-zA-Z0-9_-]+$', min_length=1, max_length=50)]):
    root: constr(pattern=r'^[a-zA-Z0-9_-]+$', min_length=1, max_length=50) = Field(
        ..., description='A tag for the item.', title='Tag'
    )


class LastModified(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    date_modified: Optional[Union[AwareDatetime, date]] = Field(
        None,
        description='Do not submit, value is assigned by the server. The date the object is modified.',
        title='Date Modified',
    )
    modified_by: Optional[str] = Field(
        None,
        description='Do not submit, value is assigned by the server. The user that modfied the object.',
        title='Modified By',
    )


class AccessStatus(Enum):
    Open = 'Open'
    Protected = 'Protected'


class Dataset(Enum):
    colo829bl = 'colo829bl'
    colo829t = 'colo829t'
    colo829blt_50to1 = 'colo829blt_50to1'
    hapmap = 'hapmap'
    hg002 = 'hg002'
    hg00438 = 'hg00438'
    hg005 = 'hg005'
    hg02257 = 'hg02257'
    hg02486 = 'hg02486'
    hg02622 = 'hg02622'
    lb_fibroblast = 'lb_fibroblast'
    lb_ipsc_1 = 'lb_ipsc_1'
    lb_ipsc_2 = 'lb_ipsc_2'
    lb_ipsc_4 = 'lb_ipsc_4'
    lb_ipsc_52 = 'lb_ipsc_52'
    lb_ipsc_60 = 'lb_ipsc_60'


class PrincipalsAllowed(BaseModel):
    view: Optional[str] = None
    edit: Optional[str] = None


class FileAccessStatus(Enum):
    Open = 'Open'
    Protected = 'Protected'


class SubmittedFile(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    schema_version: Optional[constr(pattern=r'^\\d+(\\.\\d+)*$')] = Field(
        '1', title='Schema Version'
    )
    accession: Optional[str] = Field(
        None,
        description='A unique identifier to be used to reference the object.',
        title='Accession',
    )
    status: Optional[Status] = Field('uploading', title='Status')
    file_format: str = Field(..., title='File Format')
    filename: constr(pattern=r'^[\\w+=,.@-]*$') = Field(
        ...,
        description="The local file name used at time of submission. Must be alphanumeric, with the exception of the following special characters: '+=,.@-_'",
        title='File Name',
    )
    file_size: Optional[int] = Field(
        None, description='Size of file on disk', title='File Size'
    )
    md5sum: Optional[str] = Field(
        None,
        description='The MD5 checksum of the file being transferred',
        title='MD5 Checksum',
    )
    content_md5sum: Optional[str] = Field(
        None,
        description='The MD5 checksum of the uncompressed file',
        title='Content MD5 Checksum',
    )
    quality_metrics: Optional[List[str]] = Field(
        None, description='Associated QC reports', min_length=1, title='Quality Metrics'
    )
    data_category: List[DataCategoryEnum] = Field(
        ...,
        description='Category for information in the file',
        min_length=1,
        title='Data Category',
    )
    data_type: List[DataTypeEnum] = Field(..., min_length=1, title='Data Type')
    o2_path: Optional[str] = Field(
        None, description='Path to file on O2', title='O2 Path'
    )
    sequencing_center: Optional[str] = Field(
        None, description='Sequencing Center', title='Sequencing Center'
    )
    s3_lifecycle_category: Optional[S3LifecycleCategory] = Field(
        None,
        description='The lifecycle category determines how long a file remains in a certain storage class.  If set to ignore, lifecycle management will have no effect on this file',
        title='S3 Lifecycle Category',
    )
    s3_lifecycle_last_checked: Optional[Union[date, AwareDatetime]] = Field(
        None,
        description='Date when the lifecycle status of the file was last checked',
        title='S3 Lifecycle - last checked',
    )
    s3_lifecycle_status: Optional[S3LifecycleStatus] = Field(
        'standard',
        description='Current S3 storage class of this object.',
        title='S3 Lifecycle Status',
    )
    uuid: Optional[UUID] = Field(None, title='UUID')
    tags: Optional[List[Tag]] = Field(
        None,
        description='Key words that can tag an item - useful for filtering.',
        title='Tags',
    )
    submitted_id: constr(pattern=r'^[A-Z0-9]{3,}_SUBMITTED-FILE_[A-Z0-9-_.]{4,}$') = (
        Field(..., description='Identifier on submission', title='Submitter ID')
    )
    date_created: Optional[Union[AwareDatetime, date]] = Field(
        None, title='Date Created'
    )
    submitted_by: Optional[str] = Field(None, title='Submitted By')
    last_modified: Optional[LastModified] = Field(None, title='Last Modified')
    access_status: Optional[AccessStatus] = Field(
        None, description='Access status for the file contents', title='Access Status'
    )
    annotated_filename: Optional[str] = Field(
        None,
        description='Filename containing controlled metadata',
        title='Annotated Filename',
    )
    dataset: Optional[Dataset] = Field(
        None, description='Dataset associated with the file', title='Dataset'
    )
    derived_from: Optional[List[str]] = Field(
        None,
        description='Files used as input to create this file',
        min_length=1,
        title='Derived From',
    )
    file_sets: List[str] = Field(
        ...,
        description='File collections associated with this file',
        min_length=1,
        title='File Sets',
    )
    software: Optional[List[str]] = Field(
        None,
        description='Software used to create this file',
        min_length=1,
        title='Software',
    )
    description: Optional[str] = Field(
        None, description='Plain text description of the item', title='Description'
    )
    submission_centers: Optional[List[str]] = Field(
        None,
        description='Submission Centers that created this item.',
        title='Generated By',
    )
    consortia: Optional[List[str]] = Field(
        None, description='Consortia associated with this item.', title='Consortia'
    )
    alternate_accessions: Optional[List[str]] = Field(
        None,
        description='Accessions previously assigned to objects that have been merged with this object.',
        title='Alternate Accessions',
    )
    submitted_md5sum: Optional[str] = Field(
        None, description='Submitted MD5 checksum of the file', title='Submitted MD5'
    )
    field_id: Optional[str] = Field(None, alias='@id', title='ID')
    field_type: Optional[List[str]] = Field(None, alias='@type', title='Type')
    principals_allowed: Optional[PrincipalsAllowed] = Field(
        None,
        description='Calculated permissions used for ES filtering',
        title='principals_allowed',
    )
    display_title: Optional[str] = Field(
        None, description='A calculated title for every object', title='Display Title'
    )
    href: Optional[str] = Field(
        None, description='Use this link to download this file', title='Download URL'
    )
    upload_credentials: Optional[Dict[str, Any]] = None
    upload_key: Optional[str] = Field(
        None, description='File object name in S3', title='Upload Key'
    )
    file_access_status: Optional[FileAccessStatus] = Field(
        None,
        description='Access status for the file contents',
        title='File Access Status',
    )
    meta_workflow_run_inputs: Optional[List[str]] = Field(
        None, title='Input to MetaWorkflowRun'
    )
    meta_workflow_run_outputs: Optional[List[str]] = Field(
        None, title='Output of MetaWorkflowRun'
    )
