# generated by datamodel-codegen:
#   filename:  tracking_item.json
#   timestamp: 2024-03-15T18:19:19+00:00

from __future__ import annotations

from datetime import date
from enum import Enum
from typing import Any, Dict, List, Optional, Union
from uuid import UUID

from pydantic import AwareDatetime, BaseModel, ConfigDict, Field, constr


class Status(Enum):
    public = 'public'
    draft = 'draft'
    released = 'released'
    in_review = 'in review'
    obsolete = 'obsolete'
    deleted = 'deleted'
    restricted = 'restricted'


class LastModified(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    date_modified: Optional[Union[AwareDatetime, date]] = Field(
        None,
        description='Do not submit, value is assigned by the server. The date the object is modified.',
        title='Date Modified',
    )
    modified_by: Optional[str] = Field(
        None,
        description='Do not submit, value is assigned by the server. The user that modfied the object.',
        title='Modified By',
    )


class TrackingType(Enum):
    other = 'other'
    download_tracking = 'download_tracking'
    google_analytics = 'google_analytics'
    jupyterhub_session = 'jupyterhub_session'


class DownloadTracking(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    user_agent: Optional[str] = Field(None, title='User Agent')
    remote_ip: Optional[str] = Field(None, title='Remote IP')
    geo_country: Optional[str] = Field(None, title='Country')
    geo_city: Optional[str] = Field(None, title='City')
    user_uuid: Optional[str] = Field(None, title='User UUID')
    request_path: Optional[str] = Field(None, title='Request Path')
    filename: Optional[str] = Field(None, title='Filename')
    file_format: Optional[str] = Field(None, title='File Format')
    experiment_type: Optional[str] = Field(None, title='Experiment Type')
    range_query: Optional[bool] = Field(None, title='Range Query')
    request_headers: Optional[str] = Field(None, title='Request Headers')


class DateIncrement(Enum):
    daily = 'daily'
    monthly = 'monthly'
    yearly = 'yearly'


class SessionsByCountryItem(BaseModel):
    ga_country: Optional[str] = Field(None, alias='ga:country', title='Country')
    ga_users: Optional[int] = Field(
        None, alias='ga:users', description='Total Number of Users', title='Users'
    )
    ga_sessions: Optional[int] = Field(
        None,
        alias='ga:sessions',
        description='Number of sessions from ga:country for the given start->end date range.',
        title='Session Count',
    )
    ga_avgSessionDuration: Optional[float] = Field(
        None, alias='ga:avgSessionDuration', title='Avg. Session Duration'
    )
    ga_bounceRate: Optional[float] = Field(
        None, alias='ga:bounceRate', title='Bounce Rate'
    )
    ga_sessionsPerUser: Optional[float] = Field(
        None,
        alias='ga:sessionsPerUser',
        description='Number of sessions divided by number of unique users.',
        title='Sessions per User',
    )
    ga_pageviews: Optional[int] = Field(None, alias='ga:pageviews', title='Pageviews')


class SessionsByDeviceCategoryItem(BaseModel):
    ga_deviceCategory: Optional[str] = Field(
        None, alias='ga:deviceCategory', title='Country'
    )
    ga_users: Optional[int] = Field(
        None, alias='ga:users', description='Total Number of Users', title='Users'
    )
    ga_sessions: Optional[int] = Field(
        None,
        alias='ga:sessions',
        description='Number of sessions from ga:deviceCategory for the given start->end date range.',
        title='Session Count',
    )
    ga_avgSessionDuration: Optional[float] = Field(
        None, alias='ga:avgSessionDuration', title='Avg. Session Duration'
    )
    ga_bounceRate: Optional[float] = Field(
        None, alias='ga:bounceRate', title='Bounce Rate'
    )
    ga_sessionsPerUser: Optional[float] = Field(
        None,
        alias='ga:sessionsPerUser',
        description='Number of sessions divided by number of unique users.',
        title='Sessions per User',
    )
    ga_pageviews: Optional[int] = Field(None, alias='ga:pageviews', title='Pageviews')


class ViewsByFileItem(BaseModel):
    ga_productName: Optional[str] = Field(
        None, alias='ga:productName', title='File Title'
    )
    ga_productSku: Optional[str] = Field(
        None, alias='ga:productSku', title='File Accession'
    )
    ga_productBrand: Optional[str] = Field(
        None, alias='ga:productBrand', title='Sequencing Center'
    )
    ga_productCategoryLevel2: Optional[str] = Field(
        None, alias='ga:productCategoryLevel2', title='Type of File'
    )
    ga_uniquePurchases: Optional[int] = Field(
        None,
        alias='ga:uniquePurchases',
        description='Combined sum of all download and range query requests.',
        title='Downloads and Range Queries',
    )
    ga_metric2: Optional[int] = Field(
        None,
        alias='ga:metric2',
        description='All file download requests which are not range queries.',
        title='Downloads',
    )
    ga_metric1: Optional[int] = Field(
        None,
        alias='ga:metric1',
        description="Cumalitive sum of all files' filesize that was authorized for egress.",
        title='Downloads and Range Queries',
    )
    ga_productDetailViews: Optional[int] = Field(
        None,
        alias='ga:productDetailViews',
        description='Number of times this File has been viewed via its Item page.',
        title='Detail Views',
    )
    ga_productListClicks: Optional[int] = Field(
        None,
        alias='ga:productListClicks',
        description='Number of times this File has been clicked on from the Browse page.',
        title='Clicks from Browse',
    )
    ga_productListViews: Optional[int] = Field(
        None,
        alias='ga:productListViews',
        description='Number of times this File has been seen present in a Browse or Search results page.',
        title='List Views',
    )


class ViewsByOtherItemItem(BaseModel):
    ga_productName: Optional[str] = Field(
        None, alias='ga:productName', title='Item Title'
    )
    ga_productSku: Optional[str] = Field(
        None, alias='ga:productSku', title='Item Accession'
    )
    ga_productBrand: Optional[str] = Field(
        None, alias='ga:productBrand', title='Sequencing Center'
    )
    ga_productCategoryHierarchy: Optional[str] = Field(
        None, alias='ga:productCategoryHierarchy', title='Type of File'
    )
    ga_productDetailViews: Optional[int] = Field(
        None,
        alias='ga:productDetailViews',
        description='Number of times this File has been viewed via its Item page.',
        title='Detail Views',
    )
    ga_productListClicks: Optional[int] = Field(
        None,
        alias='ga:productListClicks',
        description='Number of times this File has been clicked on from the Browse page.',
        title='Clicks from Browse',
    )
    ga_productListViews: Optional[int] = Field(
        None,
        alias='ga:productListViews',
        description='Number of times this File has been seen present in a Browse or Search results page.',
        title='List Views',
    )


class SearchSearchQuery(BaseModel):
    ga_searchKeyword: Optional[str] = Field(
        None,
        alias='ga:searchKeyword',
        description='Search query which was typed or linked to.',
        title='Search Query',
    )
    ga_users: Optional[int] = Field(
        None,
        alias='ga:users',
        description="Number of Users who've searched this.",
        title='Users',
    )
    ga_sessions: Optional[int] = Field(
        None,
        alias='ga:sessions',
        description='Number of sessions where this search occurred.',
        title='Sessions',
    )
    ga_pageviews: Optional[int] = Field(None, alias='ga:pageviews', title='Pageviews')


class BrowseSearchQuery(BaseModel):
    ga_searchKeyword: Optional[str] = Field(
        None,
        alias='ga:searchKeyword',
        description='Search query which was typed or linked to.',
        title='Search Query',
    )
    ga_users: Optional[int] = Field(
        None,
        alias='ga:users',
        description="Number of Users who've searched this.",
        title='Users',
    )
    ga_sessions: Optional[int] = Field(
        None,
        alias='ga:sessions',
        description='Number of sessions where this search occurred.',
        title='Sessions',
    )
    ga_pageviews: Optional[int] = Field(None, alias='ga:pageviews', title='Pageviews')


class FieldsFacetedItem(BaseModel):
    ga_searchKeyword: Optional[str] = Field(
        None,
        alias='ga:searchKeyword',
        description='Search query which was typed or linked to.',
        title='Search Query',
    )
    ga_users: Optional[int] = Field(
        None,
        alias='ga:users',
        description="Number of Users who've searched this.",
        title='Users',
    )
    ga_sessions: Optional[int] = Field(
        None,
        alias='ga:sessions',
        description='Number of sessions where this search occurred.',
        title='Sessions',
    )
    ga_pageviews: Optional[int] = Field(None, alias='ga:pageviews', title='Pageviews')


class FileDownloadsByCountryItem(BaseModel):
    ga_country: Optional[str] = Field(None, alias='ga:country', title='Country')
    ga_productDetailViews: Optional[int] = Field(
        None,
        alias='ga:productDetailViews',
        description='Number of times this File has been viewed via its Item page.',
        title='Detail Views',
    )
    ga_productListClicks: Optional[int] = Field(
        None,
        alias='ga:productListClicks',
        description='Number of times this File has been clicked on from the Browse page.',
        title='Clicks from Browse',
    )
    ga_productListViews: Optional[int] = Field(
        None,
        alias='ga:productListViews',
        description='Number of times this File has been seen present in a Browse or Search results page.',
        title='List Views',
    )
    ga_metric2: Optional[int] = Field(None, alias='ga:metric2', title='Downloads')
    ga_metric1: Optional[int] = Field(
        None, alias='ga:metric1', title='Cumalative Filesize'
    )
    ga_calcMetric_PercentRangeQueries: Optional[int] = Field(
        None, alias='ga:calcMetric_PercentRangeQueries', title='Range Query Count'
    )


class FileDownloadsByFiletypeItem(BaseModel):
    ga_productVariant: Optional[str] = Field(
        None, alias='ga:productVariant', title='File Type'
    )
    ga_productDetailViews: Optional[int] = Field(
        None,
        alias='ga:productDetailViews',
        description='Number of times this File has been viewed via its Item page.',
        title='Detail Views',
    )
    ga_productListClicks: Optional[int] = Field(
        None,
        alias='ga:productListClicks',
        description='Number of times this File has been clicked on from the Browse page.',
        title='Clicks from Browse',
    )
    ga_productListViews: Optional[int] = Field(
        None,
        alias='ga:productListViews',
        description='Number of times this File has been seen present in a Browse or Search results page.',
        title='List Views',
    )
    ga_metric2: Optional[int] = Field(None, alias='ga:metric2', title='Downloads')
    ga_metric1: Optional[int] = Field(
        None, alias='ga:metric1', title='Cumalative Filesize'
    )
    ga_calcMetric_PercentRangeQueries: Optional[int] = Field(
        None, alias='ga:calcMetric_PercentRangeQueries', title='Range Query Count'
    )


class TopFilesDownloadedItem(BaseModel):
    ga_productName: Optional[str] = Field(
        None, alias='ga:productName', title='Item Title'
    )
    ga_productSku: Optional[str] = Field(
        None, alias='ga:productSku', title='Item Accession'
    )
    ga_productBrand: Optional[str] = Field(
        None, alias='ga:productBrand', title='Sequencing Center'
    )
    ga_productVariant: Optional[str] = Field(
        None, alias='ga:productVariant', title='File Type'
    )
    ga_productCategoryLevel2: Optional[str] = Field(
        None, alias='ga:productCategoryLevel2', title='Item Type of File'
    )
    ga_productDetailViews: Optional[int] = Field(
        None,
        alias='ga:productDetailViews',
        description='Number of times this File has been viewed via its Item page.',
        title='Detail Views',
    )
    ga_productListClicks: Optional[int] = Field(
        None,
        alias='ga:productListClicks',
        description='Number of times this File has been clicked on from the Browse page.',
        title='Clicks from Browse',
    )
    ga_productListViews: Optional[int] = Field(
        None,
        alias='ga:productListViews',
        description='Number of times this File has been seen present in a Browse or Search results page.',
        title='List Views',
    )
    ga_metric2: Optional[int] = Field(None, alias='ga:metric2', title='Downloads')
    ga_metric1: Optional[int] = Field(
        None, alias='ga:metric1', title='Cumalative Filesize'
    )
    ga_calcMetric_PercentRangeQueries: Optional[int] = Field(
        None, alias='ga:calcMetric_PercentRangeQueries', title='Range Query Count'
    )


class MetadataTsvByCountryItem(BaseModel):
    ga_country: Optional[str] = Field(None, alias='ga:country', title='Country')
    ga_productListName: Optional[str] = Field(
        None,
        alias='ga:productListName',
        description='The source where the metadata.tsv file is generated',
        title='List Name',
    )
    ga_uniquePurchases: Optional[int] = Field(
        None,
        alias='ga:uniquePurchases',
        description='Total files count included within the file',
        title='Files Count',
    )


class FileDownloadsByAssayTypeItem(BaseModel):
    ga_dimension5: Optional[str] = Field(
        None, alias='ga:dimension5', title='Assay Type'
    )
    ga_productVariant: Optional[int] = Field(
        None,
        alias='ga:productVariant',
        description='Number of times this File has been viewed via its Item page.',
        title='Detail Views',
    )
    ga_productListClicks: Optional[int] = Field(
        None,
        alias='ga:productListClicks',
        description='Number of times this File has been clicked on from the Browse page.',
        title='Clicks from Browse',
    )
    ga_productListViews: Optional[int] = Field(
        None,
        alias='ga:productListViews',
        description='Number of times this File has been seen present in a Browse or Search results page.',
        title='List Views',
    )
    ga_metric2: Optional[int] = Field(None, alias='ga:metric2', title='Downloads')
    ga_metric1: Optional[int] = Field(
        None, alias='ga:metric1', title='Cumalative Filesize'
    )
    ga_calcMetric_PercentRangeQueries: Optional[int] = Field(
        None, alias='ga:calcMetric_PercentRangeQueries', title='Range Query Count'
    )


class Reports(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    sessions_by_country: Optional[List[SessionsByCountryItem]] = Field(
        None, title='User Sessions by Country'
    )
    sessions_by_device_category: Optional[List[SessionsByDeviceCategoryItem]] = Field(
        None, title='User Sessions by Device Category'
    )
    views_by_file: Optional[List[ViewsByFileItem]] = Field(None, title='File Views')
    views_by_other_item: Optional[List[ViewsByOtherItemItem]] = Field(
        None,
        description='Item views for Item types which are not File',
        title='Item Views',
    )
    search_search_queries: Optional[List[SearchSearchQuery]] = Field(
        None,
        description='Search query counts which occurred on the /search/ page.',
        title='Other Search Queries',
    )
    browse_search_queries: Optional[List[BrowseSearchQuery]] = Field(
        None,
        description='Search query counts which occurred on the /browse/ page.',
        title='Browse Search Queries',
    )
    fields_faceted: Optional[List[FieldsFacetedItem]] = Field(
        None,
        description='Counts for fields and terms selected as filters.',
        title='Facets',
    )
    file_downloads_by_country: Optional[List[FileDownloadsByCountryItem]] = Field(
        None,
        description='File Downloads segmented by country',
        title='File Downloads by Country',
    )
    file_downloads_by_filetype: Optional[List[FileDownloadsByFiletypeItem]] = Field(
        None,
        description='File Downloads segmented by file type',
        title='File Downloads by File Type',
    )
    top_files_downloaded: Optional[List[TopFilesDownloadedItem]] = Field(
        None,
        description='Top File Downloads segmented by file',
        title='Top File Downloads',
    )
    metadata_tsv_by_country: Optional[List[MetadataTsvByCountryItem]] = Field(
        None, title='Metadata.tsv Download by Country'
    )
    file_downloads_by_assay_type: Optional[List[FileDownloadsByAssayTypeItem]] = Field(
        None,
        description='File Downloads segmented by country',
        title='File Downloads by Assay Type',
    )


class GoogleAnalytics(BaseModel):
    for_date: Optional[date] = Field(
        None,
        description='The date for which analytics are gathered in reports.',
        title='Analytics Date',
    )
    date_increment: Optional[DateIncrement] = Field(
        None,
        description='For which date increment does this Item apply.',
        title='Date Increment',
    )
    reports: Optional[Reports] = Field(
        None,
        description='The analytics data that is applicable for the start_date to end_date range.',
        title='Report Data',
    )


class JupyterhubSession(BaseModel):
    model_config = ConfigDict(
        extra='allow',
    )
    user_uuid: Optional[str] = Field(None, title='User UUID')
    date_initialized: Optional[Union[AwareDatetime, date]] = Field(
        None, title='Date Initialized'
    )
    date_culled: Optional[Union[AwareDatetime, date]] = Field(None, title='Date Culled')
    files_mounted: Optional[List[str]] = Field(
        None,
        description='UUIDs of files mounted during this session.',
        title='Files Mounted',
    )


class PrincipalsAllowed(BaseModel):
    view: Optional[str] = None
    edit: Optional[str] = None


class TrackingItem(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    status: Optional[Status] = Field('in review', title='Status')
    last_modified: Optional[LastModified] = Field(None, title='Last Modified')
    date_created: Optional[Union[AwareDatetime, date]] = Field(
        None, title='Date Created'
    )
    submitted_by: Optional[str] = Field(None, title='Submitted By')
    uuid: Optional[UUID] = Field(None, title='UUID')
    schema_version: Optional[constr(pattern=r'^\\d+(\\.\\d+)*$')] = Field(
        '1', title='Schema Version'
    )
    tracking_type: TrackingType = Field(
        ...,
        description='What this item tracks. Defaults to other',
        title='Tracking Type',
    )
    download_tracking: Optional[DownloadTracking] = Field(
        None,
        description='Subobject to hold download tracking field. Allows additional properties',
        title='Download Tracking',
    )
    google_analytics: Optional[GoogleAnalytics] = Field(
        None,
        description='A high-level container object containing data from Google Analytics as well as metadata about the report.',
        title='Google Analytics Data',
    )
    jupyterhub_session: Optional[JupyterhubSession] = Field(
        None,
        description='Subobject to track a JupyterHub session. Allows additional properties',
        title='JupyterHub Session',
    )
    other_tracking: Optional[Dict[str, Any]] = Field(
        None,
        description='Subobject to misc. tracking fields. Allows additional properties',
        title='Other Tracking',
    )
    field_id: Optional[str] = Field(None, alias='@id', title='ID')
    field_type: Optional[List[str]] = Field(None, alias='@type', title='Type')
    principals_allowed: Optional[PrincipalsAllowed] = Field(
        None,
        description='Calculated permissions used for ES filtering',
        title='principals_allowed',
    )
    display_title: Optional[str] = Field(None, title='Title')
