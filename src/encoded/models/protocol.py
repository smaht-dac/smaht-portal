# generated by datamodel-codegen:
#   filename:  protocol.json
#   timestamp: 2024-03-15T18:19:18+00:00

from __future__ import annotations

from datetime import date
from enum import Enum
from typing import List, Optional, Union
from uuid import UUID

from pydantic import AwareDatetime, BaseModel, ConfigDict, Field, RootModel, constr


class Tag(RootModel[constr(pattern=r'^[a-zA-Z0-9_-]+$', min_length=1, max_length=50)]):
    root: constr(pattern=r'^[a-zA-Z0-9_-]+$', min_length=1, max_length=50) = Field(
        ..., description='A tag for the item.', title='Tag'
    )


class Status(Enum):
    public = 'public'
    draft = 'draft'
    released = 'released'
    in_review = 'in review'
    obsolete = 'obsolete'
    deleted = 'deleted'
    restricted = 'restricted'


class LastModified(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    date_modified: Optional[Union[AwareDatetime, date]] = Field(
        None,
        description='Do not submit, value is assigned by the server. The date the object is modified.',
        title='Date Modified',
    )
    modified_by: Optional[str] = Field(
        None,
        description='Do not submit, value is assigned by the server. The user that modfied the object.',
        title='Modified By',
    )


class Type(Enum):
    application_msword = 'application/msword'
    application_vnd_ms_excel = 'application/vnd.ms-excel'
    application_vnd_openxmlformats_officedocument_spreadsheetml_sheet = (
        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
    )
    application_pdf = 'application/pdf'
    application_zip = 'application/zip'
    application_proband_xml = 'application/proband+xml'
    text_plain = 'text/plain'
    text_tab_separated_values = 'text/tab-separated-values'
    image_jpeg = 'image/jpeg'
    image_tiff = 'image/tiff'
    image_gif = 'image/gif'
    text_html = 'text/html'
    image_png = 'image/png'
    image_svs = 'image/svs'
    text_autosql = 'text/autosql'


class Attachment(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    download: Optional[str] = Field(
        None, description='File Name of the attachment.', title='File Name'
    )
    href: Optional[str] = Field(
        None,
        description='Path to download the file attached to this Item.',
        title='href',
    )
    type: Optional[Type] = Field(None, title='Media Type')
    md5sum: Optional[str] = Field(
        None,
        description='Use this to ensure that your file was downloaded without errors or corruption.',
        title='MD5 Checksum',
    )
    size: Optional[int] = Field(
        None, description='Size of the attachment on disk', title='Attachment size'
    )
    width: Optional[int] = Field(
        None, description='Width of the image attached, in pixels.', title='Image width'
    )
    height: Optional[int] = Field(
        None,
        description='Height of the image attached, in pixels.',
        title='Image height',
    )
    blob_id: Optional[str] = Field(None, title='Blob ID')


class PrincipalsAllowed(BaseModel):
    view: Optional[str] = None
    edit: Optional[str] = None


class Protocol(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    version: constr(pattern=r'^([0-9]+.)*[0-9]+$') = Field(
        ..., description='Version for the item', title='Version'
    )
    uuid: Optional[UUID] = Field(None, title='UUID')
    tags: Optional[List[Tag]] = Field(
        None,
        description='Key words that can tag an item - useful for filtering.',
        title='Tags',
    )
    date_created: Optional[Union[AwareDatetime, date]] = Field(
        None, title='Date Created'
    )
    submitted_by: Optional[str] = Field(None, title='Submitted By')
    status: Optional[Status] = Field('in review', title='Status')
    schema_version: Optional[constr(pattern=r'^\\d+(\\.\\d+)*$')] = Field(
        '1', title='Schema Version'
    )
    last_modified: Optional[LastModified] = Field(None, title='Last Modified')
    identifier: constr(pattern=r'^[A-Za-z0-9-_]+$', min_length=2) = Field(
        ..., description='Unique, identifying name for the item', title='Identifier'
    )
    description: Optional[str] = Field(
        None, description='Plain text description of the item', title='Description'
    )
    submission_centers: List[str] = Field(
        ...,
        description='Submission Centers that created this item.',
        title='Generated By',
    )
    consortia: Optional[List[str]] = Field(
        None, description='Consortia associated with this item.', title='Consortia'
    )
    attachment: Optional[Attachment] = Field(
        None, description='File attached to this Item.', title='Attached File'
    )
    accession: Optional[str] = Field(
        None,
        description='A unique identifier to be used to reference the object.',
        title='Accession',
    )
    alternate_accessions: Optional[List[str]] = Field(
        None,
        description='Accessions previously assigned to objects that have been merged with this object.',
        title='Alternate Accessions',
    )
    field_id: Optional[str] = Field(None, alias='@id', title='ID')
    field_type: Optional[List[str]] = Field(None, alias='@type', title='Type')
    principals_allowed: Optional[PrincipalsAllowed] = Field(
        None,
        description='Calculated permissions used for ES filtering',
        title='principals_allowed',
    )
    display_title: Optional[str] = Field(None, title='Display Title')
