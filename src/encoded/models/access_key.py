# generated by datamodel-codegen:
#   filename:  access_key.json
#   timestamp: 2024-03-15T18:19:16+00:00

from __future__ import annotations

from datetime import date
from enum import Enum
from typing import List, Optional, Union
from uuid import UUID

from pydantic import AwareDatetime, BaseModel, ConfigDict, Field, constr


class LastModified(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    date_modified: Optional[Union[AwareDatetime, date]] = Field(
        None,
        description='Do not submit, value is assigned by the server. The date the object is modified.',
        title='Date Modified',
    )
    modified_by: Optional[str] = Field(
        None,
        description='Do not submit, value is assigned by the server. The user that modfied the object.',
        title='Modified By',
    )


class Status(Enum):
    current = 'current'
    deleted = 'deleted'


class PrincipalsAllowed(BaseModel):
    view: Optional[str] = None
    edit: Optional[str] = None


class AccessKey(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    uuid: Optional[UUID] = Field(None, title='UUID')
    date_created: Optional[Union[AwareDatetime, date]] = Field(
        None, title='Date Created'
    )
    submitted_by: Optional[str] = Field(None, title='Submitted By')
    schema_version: Optional[constr(pattern=r'^\\d+(\\.\\d+)*$')] = Field(
        '1', title='Schema Version'
    )
    last_modified: Optional[LastModified] = Field(None, title='Last Modified')
    description: Optional[str] = Field(
        None, description='Plain text description of the item', title='Description'
    )
    access_key_id: Optional[str] = Field(None, title='Access key ID')
    expiration_date: Optional[str] = Field(None, title='Expiration Date')
    secret_access_key_hash: Optional[str] = Field(None, title='Secret access key Hash')
    status: Optional[Status] = Field('current', title='Status')
    user: Optional[str] = Field(None, title='User')
    field_id: Optional[str] = Field(None, alias='@id', title='ID')
    field_type: Optional[List[str]] = Field(None, alias='@type', title='Type')
    principals_allowed: Optional[PrincipalsAllowed] = Field(
        None,
        description='Calculated permissions used for ES filtering',
        title='principals_allowed',
    )
    display_title: Optional[str] = Field(None, title='Display Title')
