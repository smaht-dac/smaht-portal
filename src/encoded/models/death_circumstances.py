# generated by datamodel-codegen:
#   filename:  death_circumstances.json
#   timestamp: 2024-03-15T18:19:16+00:00

from __future__ import annotations

from datetime import date
from enum import Enum
from typing import List, Optional, Union
from uuid import UUID

from pydantic import (
    AwareDatetime,
    BaseModel,
    ConfigDict,
    Field,
    RootModel,
    confloat,
    conint,
    constr,
)


class Tag(RootModel[constr(pattern=r'^[a-zA-Z0-9_-]+$', min_length=1, max_length=50)]):
    root: constr(pattern=r'^[a-zA-Z0-9_-]+$', min_length=1, max_length=50) = Field(
        ..., description='A tag for the item.', title='Tag'
    )


class Status(Enum):
    public = 'public'
    draft = 'draft'
    released = 'released'
    in_review = 'in review'
    obsolete = 'obsolete'
    deleted = 'deleted'
    restricted = 'restricted'


class LastModified(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    date_modified: Optional[Union[AwareDatetime, date]] = Field(
        None,
        description='Do not submit, value is assigned by the server. The date the object is modified.',
        title='Date Modified',
    )
    modified_by: Optional[str] = Field(
        None,
        description='Do not submit, value is assigned by the server. The user that modfied the object.',
        title='Modified By',
    )


class AutopsyByOfficial(Enum):
    Yes = 'Yes'
    No = 'No'
    Unknown = 'Unknown'


class BloodTransfusion(Enum):
    Yes = 'Yes'
    No = 'No'
    Unknown = 'Unknown'


class BloodTransfusionProduct(Enum):
    Cryoprecipitate = 'Cryoprecipitate'
    Fresh_Frozen_PlasmaPacked_Red_Blood_Cells = (
        'Fresh Frozen PlasmaPacked Red Blood Cells'
    )
    Platelets = 'Platelets'


class DeathCertificateAvailable(Enum):
    Yes = 'Yes'
    No = 'No'
    Unknown = 'Unknown'


class DeterminerOfDeath(Enum):
    TBD = 'TBD'


class MannerOfDeath(Enum):
    TBD = 'TBD'


class PlaceOfDeath(Enum):
    TBD = 'TBD'


class VentilatorAtDeath(Enum):
    Yes = 'Yes'
    No = 'No'
    Unknown = 'Unknown'


class WitnessedDeath(Enum):
    Yes = 'Yes'
    No = 'No'
    Unknown = 'Unknown'


class PrincipalsAllowed(BaseModel):
    view: Optional[str] = None
    edit: Optional[str] = None


class DeathCircumstances(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    uuid: Optional[UUID] = Field(None, title='UUID')
    tags: Optional[List[Tag]] = Field(
        None,
        description='Key words that can tag an item - useful for filtering.',
        title='Tags',
    )
    submitted_id: constr(
        pattern=r'^[A-Z0-9]{3,}_DEATH-CIRCUMSTANCES_[A-Z0-9-_.]{4,}$'
    ) = Field(..., description='Identifier on submission', title='Submitter ID')
    date_created: Optional[Union[AwareDatetime, date]] = Field(
        None, title='Date Created'
    )
    submitted_by: Optional[str] = Field(None, title='Submitted By')
    status: Optional[Status] = Field('in review', title='Status')
    schema_version: Optional[constr(pattern=r'^\\d+(\\.\\d+)*$')] = Field(
        '1', title='Schema Version'
    )
    last_modified: Optional[LastModified] = Field(None, title='Last Modified')
    submission_centers: List[str] = Field(
        ...,
        description='Submission Centers that created this item.',
        title='Generated By',
    )
    consortia: Optional[List[str]] = Field(
        None, description='Consortia associated with this item.', title='Consortia'
    )
    accession: Optional[str] = Field(
        None,
        description='A unique identifier to be used to reference the object.',
        title='Accession',
    )
    alternate_accessions: Optional[List[str]] = Field(
        None,
        description='Accessions previously assigned to objects that have been merged with this object.',
        title='Alternate Accessions',
    )
    autopsy_by_official: Optional[AutopsyByOfficial] = Field(
        None,
        description='Whether an autopsy was performed by a licensed official',
        title='Autopsy By Official',
    )
    blood_transfusion: Optional[BloodTransfusion] = Field(
        None,
        description='Whether donor received a blood transfusion within 48 hours of death',
        title='Blood Transfusion',
    )
    blood_transfusion_products: Optional[List[BloodTransfusionProduct]] = Field(
        None,
        description='Blood transfusion products received by donor within 48 hours',
        min_length=1,
        title='Blood Transfusion Products',
    )
    brain_death_datetime: Optional[AwareDatetime] = Field(
        None,
        description='Date and time when brain death was determined for the donor',
        title='Brain Death Datetime',
    )
    cardiac_cessation_datetime: Optional[AwareDatetime] = Field(
        None,
        description='Date and time when cardiac activity was determined to have ceased for the donor',
        title='Cardiac Cessation Datetime',
    )
    cause_of_death_immediate: Optional[str] = Field(
        None, description='Immediate cause of death', title='Cause Of Death Immediate'
    )
    cause_of_death_immediate_interval: Optional[confloat(ge=0.0)] = Field(
        None,
        description='Interval of time from immediate cause of death to death in minutes',
        title='Cause Of Death Immediate Interval',
    )
    cause_of_death_initial: Optional[str] = Field(
        None, description='Initial cause of death', title='Cause Of Death Initial'
    )
    cause_of_death_initial_interval: Optional[confloat(ge=0.0)] = Field(
        None,
        description='Interval of time from initial cause of death to death in minutes',
        title='Cause Of Death Initial Interval',
    )
    cause_of_death_last_underlying: Optional[str] = Field(
        None,
        description='Last underlying cause of death',
        title='Cause Of Death Last Underlying',
    )
    cause_of_death_last_underlying_interval: Optional[float] = Field(
        None,
        description='Interval of time from last underlying cause of death to death in minutes',
        title='Cause Of Death Last Underlying Interval',
    )
    cause_of_death_official: Optional[str] = Field(
        None, description='Official cause of death', title='Cause Of Death Official'
    )
    city_of_death: Optional[str] = Field(
        None, description='City of death of the donor', title='City Of Death'
    )
    country_of_death: Optional[str] = Field(
        None, description='Country of death of the donor', title='Country Of Death'
    )
    death_certificate_available: Optional[DeathCertificateAvailable] = Field(
        None,
        description='Whether a death certificate is available for the donor',
        title='Death Certificate Available',
    )
    death_pronounced_datetime: Optional[AwareDatetime] = Field(
        None,
        description='Date and time when death of the donor was pronounced',
        title='Death Pronounced Datetime',
    )
    death_pronounced_interval: Optional[confloat(ge=0.0)] = Field(
        None,
        description='Interval of time from death until death was pronounced in minutes',
        title='Death Pronounced Interval',
    )
    determiner_of_death: Optional[DeterminerOfDeath] = Field(
        None,
        description='If death occurred outside hospital, role of person who determined death of the donor',
        title='Determiner Of Death',
    )
    hardy_scale: Optional[conint(ge=1, le=4)] = Field(
        None,
        description='Death classification based on the 4-point Hardy Scale',
        title='Hardy Scale',
    )
    icd_10_category: Optional[str] = Field(
        None,
        description='Category of death based on ICD-10 coding',
        title='Icd 10 Category',
    )
    icd_10_cause: Optional[str] = Field(
        None,
        description='Specific cause of death based on ICD-10 coding ',
        title='Icd 10 Cause',
    )
    icd_10_classification: Optional[str] = Field(
        None,
        description='Classification of death based on ICD-10 coding ',
        title='Icd 10 Classification',
    )
    icd_10_code: Optional[str] = Field(
        None, description='ICD-10 Code for cause of death', title='Icd 10 Code'
    )
    last_seen_alive_datetime: Optional[AwareDatetime] = Field(
        None,
        description='Date and time when the donor was last known to be alive',
        title='Last Seen Alive Datetime',
    )
    manner_of_death: Optional[MannerOfDeath] = Field(
        None, description='Manner of death of the donor', title='Manner Of Death'
    )
    place_of_death: Optional[PlaceOfDeath] = Field(
        None, description='Place of death of the donor', title='Place Of Death'
    )
    presumed_cardiac_cessation_datetime: Optional[AwareDatetime] = Field(
        None,
        description='Date and time when cardiac activity was presumed to have ceased for the donor',
        title='Presumed Cardiac Cessation Datetime',
    )
    ventilator_at_death: Optional[VentilatorAtDeath] = Field(
        None,
        description='Whether the donor was on a ventilator immediately prior to death',
        title='Ventilator At Death',
    )
    ventilator_time: Optional[confloat(ge=0.0)] = Field(
        None,
        description='Time in minutes the donor was on a ventilator prior to death',
        title='Ventilator Time',
    )
    witnessed_death: Optional[WitnessedDeath] = Field(
        None,
        description='Whether the death of the donor was witnessed directly',
        title='Witnessed Death',
    )
    donor: str = Field(..., description='Link to the associated donor', title='Donor')
    field_id: Optional[str] = Field(None, alias='@id', title='ID')
    field_type: Optional[List[str]] = Field(None, alias='@type', title='Type')
    principals_allowed: Optional[PrincipalsAllowed] = Field(
        None,
        description='Calculated permissions used for ES filtering',
        title='principals_allowed',
    )
    display_title: Optional[str] = Field(None, title='Display Title')
