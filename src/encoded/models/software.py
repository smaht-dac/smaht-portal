# generated by datamodel-codegen:
#   filename:  software.json
#   timestamp: 2024-03-15T18:19:18+00:00

from __future__ import annotations

from datetime import date
from enum import Enum
from typing import List, Optional, Union
from uuid import UUID

from pydantic import (
    AnyUrl,
    AwareDatetime,
    BaseModel,
    ConfigDict,
    Field,
    RootModel,
    constr,
)


class Tag(RootModel[constr(pattern=r'^[a-zA-Z0-9_-]+$', min_length=1, max_length=50)]):
    root: constr(pattern=r'^[a-zA-Z0-9_-]+$', min_length=1, max_length=50) = Field(
        ..., description='A tag for the item.', title='Tag'
    )


class Status(Enum):
    public = 'public'
    draft = 'draft'
    released = 'released'
    in_review = 'in review'
    obsolete = 'obsolete'
    deleted = 'deleted'
    restricted = 'restricted'


class LastModified(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    date_modified: Optional[Union[AwareDatetime, date]] = Field(
        None,
        description='Do not submit, value is assigned by the server. The date the object is modified.',
        title='Date Modified',
    )
    modified_by: Optional[str] = Field(
        None,
        description='Do not submit, value is assigned by the server. The user that modfied the object.',
        title='Modified By',
    )


class CategoryEnum(Enum):
    Alignment = 'Alignment'
    Alignment_Manipulation = 'Alignment Manipulation'
    Assembly = 'Assembly'
    Basecaller = 'Basecaller'
    Data_Compression = 'Data Compression'
    Feature_Annotation = 'Feature Annotation'
    Format_Conversion = 'Format Conversion'
    Quality_Control = 'Quality Control'
    Read_Manipulation = 'Read Manipulation'
    Variant_Annotation = 'Variant Annotation'
    Variant_Calling = 'Variant Calling'
    Variant_Manipulation = 'Variant Manipulation'


class Alias(RootModel[constr(pattern=r'^[^\\s\\\\\\/]+:[^\\s\\\\\\/]+$')]):
    root: constr(pattern=r'^[^\\s\\\\\\/]+:[^\\s\\\\\\/]+$') = Field(
        ...,
        description='Institution-specific ID (e.g. bgm:cohort-1234-a).',
        title='ID Alias',
    )


class PrincipalsAllowed(BaseModel):
    view: Optional[str] = None
    edit: Optional[str] = None


class Software(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    version: constr(pattern=r'.+') = Field(
        ..., description='Version for the item', title='Version'
    )
    uuid: Optional[UUID] = Field(None, title='UUID')
    title: constr(min_length=3) = Field(
        ..., description='Title for the item', title='Title'
    )
    tags: Optional[List[Tag]] = Field(
        None,
        description='Key words that can tag an item - useful for filtering.',
        title='Tags',
    )
    submitted_id: Optional[
        constr(pattern=r'^[A-Z0-9]{3,}_SOFTWARE_[A-Z0-9-_.]{4,}$')
    ] = Field(None, description='Identifier on submission', title='Submitter ID')
    date_created: Optional[Union[AwareDatetime, date]] = Field(
        None, title='Date Created'
    )
    submitted_by: Optional[str] = Field(None, title='Submitted By')
    status: Optional[Status] = Field('in review', title='Status')
    schema_version: Optional[constr(pattern=r'^\\d+(\\.\\d+)*$')] = Field(
        '1', title='Schema Version'
    )
    name: Optional[constr(pattern=r'^[A-Za-z0-9-_]+$', min_length=3)] = Field(
        None, description='Name of the item', title='Name'
    )
    last_modified: Optional[LastModified] = Field(None, title='Last Modified')
    description: Optional[str] = Field(
        None, description='Plain text description of the item', title='Description'
    )
    code: Optional[constr(pattern=r'^[A-Za-z0-9_]{2,}$')] = Field(
        None, description='Code used in file naming scheme', title='Code'
    )
    category: List[CategoryEnum] = Field(..., min_length=1, title='Category')
    submission_centers: Optional[List[str]] = Field(
        None,
        description='Submission Centers that created this item.',
        title='Generated By',
    )
    consortia: Optional[List[str]] = Field(
        None, description='Consortia associated with this item.', title='Consortia'
    )
    aliases: Optional[List[Alias]] = Field(
        None,
        description='Institution-specific ID (e.g. bgm:cohort-1234-a).',
        title='Aliases',
    )
    accession: Optional[str] = Field(
        None,
        description='A unique identifier to be used to reference the object.',
        title='Accession',
    )
    alternate_accessions: Optional[List[str]] = Field(
        None,
        description='Accessions previously assigned to objects that have been merged with this object.',
        title='Alternate Accessions',
    )
    binary_url: Optional[AnyUrl] = Field(
        None,
        description='An external resource to a compiled download of the software.',
        title='Binary URL',
    )
    commit: Optional[str] = Field(
        None, description='The software commit hash.', title='Commit'
    )
    source_url: Optional[AnyUrl] = Field(
        None, description='An external resource to the code base.', title='Source URL'
    )
    field_id: Optional[str] = Field(None, alias='@id', title='ID')
    field_type: Optional[List[str]] = Field(None, alias='@type', title='Type')
    principals_allowed: Optional[PrincipalsAllowed] = Field(
        None,
        description='Calculated permissions used for ES filtering',
        title='principals_allowed',
    )
    display_title: Optional[str] = Field(None, title='Display Title')
