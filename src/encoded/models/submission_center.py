# generated by datamodel-codegen:
#   filename:  submission_center.json
#   timestamp: 2024-03-15T18:19:18+00:00

from __future__ import annotations

from datetime import date
from enum import Enum
from typing import List, Optional, Union
from uuid import UUID

from pydantic import (
    AnyUrl,
    AwareDatetime,
    BaseModel,
    ConfigDict,
    Field,
    RootModel,
    constr,
)


class Tag(RootModel[constr(pattern=r'^[a-zA-Z0-9_-]+$', min_length=1, max_length=50)]):
    root: constr(pattern=r'^[a-zA-Z0-9_-]+$', min_length=1, max_length=50) = Field(
        ..., description='A tag for the item.', title='Tag'
    )


class StaticContentItem(BaseModel):
    content: str = Field(
        ..., description='A UserContent Item.', title='Link to Content'
    )
    location: str = Field(
        ...,
        description='Where this content should be displayed. Item schemas could potentially define an enum to contrain values.',
        title='Location of Content',
    )
    description: Optional[str] = Field(
        None,
        description='Description or note about this content. Might be displayed as a footnote or caption, if applicable for view.',
        title='Description',
    )


class Status(Enum):
    public = 'public'
    draft = 'draft'
    released = 'released'
    in_review = 'in review'
    obsolete = 'obsolete'
    deleted = 'deleted'
    restricted = 'restricted'


class LastModified(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    date_modified: Optional[Union[AwareDatetime, date]] = Field(
        None,
        description='Do not submit, value is assigned by the server. The date the object is modified.',
        title='Date Modified',
    )
    modified_by: Optional[str] = Field(
        None,
        description='Do not submit, value is assigned by the server. The user that modfied the object.',
        title='Modified By',
    )


class Alias(RootModel[constr(pattern=r'^[^\\s\\\\\\/]+:[^\\s\\\\\\/]+$')]):
    root: constr(pattern=r'^[^\\s\\\\\\/]+:[^\\s\\\\\\/]+$') = Field(
        ...,
        description='Institution-specific ID (e.g. bgm:cohort-1234-a).',
        title='ID Alias',
    )


class PrincipalsAllowed(BaseModel):
    view: Optional[str] = None
    edit: Optional[str] = None


class SubmissionCenter(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    uuid: Optional[UUID] = Field(None, title='UUID')
    url: Optional[AnyUrl] = Field(
        None,
        description='An external resource with additional information about the item',
        title='URL',
    )
    title: constr(min_length=3) = Field(
        ..., description='Title for the item', title='Title'
    )
    tags: Optional[List[Tag]] = Field(
        None,
        description='Key words that can tag an item - useful for filtering.',
        title='Tags',
    )
    date_created: Optional[Union[AwareDatetime, date]] = Field(
        None, title='Date Created'
    )
    submitted_by: Optional[str] = Field(None, title='Submitted By')
    static_headers: Optional[List[str]] = Field(
        None,
        description='Array of linkTos for static sections to be displayed at the top of an item page',
        title='Static Headers',
    )
    static_content: Optional[List[StaticContentItem]] = Field(
        None,
        description="Array of objects containing linkTo UserContent and 'position' to be placed on Item view(s).",
        title='Static Content',
    )
    status: Optional[Status] = Field('released', title='Status')
    schema_version: Optional[constr(pattern=r'^\\d+(\\.\\d+)*$')] = Field(
        '1', title='Schema Version'
    )
    last_modified: Optional[LastModified] = Field(None, title='Last Modified')
    identifier: constr(pattern=r'^[A-Za-z0-9-_]+$', min_length=2) = Field(
        ..., description='Unique, identifying name for the item', title='Identifier'
    )
    description: Optional[str] = Field(
        None, description='Plain text description of the item', title='Description'
    )
    code: constr(pattern=r'^[a-z0-9]{3,}$') = Field(
        ..., description='Code used in file naming scheme', title='Code'
    )
    aliases: Optional[List[Alias]] = Field(
        None,
        description='Institution-specific ID (e.g. bgm:cohort-1234-a).',
        title='Aliases',
    )
    leader: Optional[str] = Field(
        None, description='The leader of the submission center', title='Leader'
    )
    field_id: Optional[str] = Field(None, alias='@id', title='ID')
    field_type: Optional[List[str]] = Field(None, alias='@type', title='Type')
    principals_allowed: Optional[PrincipalsAllowed] = Field(
        None,
        description='Calculated permissions used for ES filtering',
        title='principals_allowed',
    )
    display_title: Optional[str] = Field(None, title='Display Title')
