# generated by datamodel-codegen:
#   filename:  page.json
#   timestamp: 2024-03-15T18:19:18+00:00

from __future__ import annotations

from datetime import date
from enum import Enum
from typing import List, Optional, Union
from uuid import UUID

from pydantic import (
    AwareDatetime,
    BaseModel,
    ConfigDict,
    Field,
    RootModel,
    conint,
    constr,
)


class Status(Enum):
    current = 'current'
    deleted = 'deleted'
    inactive = 'inactive'
    in_review = 'in review'
    public = 'public'
    shared = 'shared'


class LastModified(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    date_modified: Optional[Union[AwareDatetime, date]] = Field(
        None,
        description='Do not submit, value is assigned by the server. The date the object is modified.',
        title='Date Modified',
    )
    modified_by: Optional[str] = Field(
        None,
        description='Do not submit, value is assigned by the server. The user that modfied the object.',
        title='Modified By',
    )


class Alias(RootModel[constr(pattern=r'^[^\\s\\\\\\/]+:[^\\s\\\\\\/]+$')]):
    root: constr(pattern=r'^[^\\s\\\\\\/]+:[^\\s\\\\\\/]+$') = Field(
        ...,
        description='Institution-specific ID (e.g. bgm:cohort-1234-a).',
        title='ID Alias',
    )


class Code(Enum):
    integer_301 = 301
    integer_302 = 302
    integer_303 = 303
    integer_307 = 307


class Redirect(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    code: Optional[Code] = Field(
        307, description='Code returned by response.', title='Response Code'
    )
    enabled: Optional[bool] = Field(False, title='Redirect Enabled')
    target: Optional[str] = Field(
        None, description='URL or path to redirect to.', title='Target'
    )


class ListStyle(Enum):
    decimal = 'decimal'
    lower_alpha = 'lower-alpha'
    lower_roman = 'lower-roman'
    none = 'none'


class TableOfContents(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    enabled: Optional[bool] = Field(
        False,
        description='Enable the table of contents or not. Defaults to false.',
        title='Enabled',
    )
    header_depth: Optional[conint(ge=1, le=6)] = Field(
        4,
        alias='header-depth',
        description='Maximum depth for table of contents titles, 1-6',
        title='Header Depth',
    )
    skip_depth: Optional[int] = Field(
        1, alias='skip-depth', description='TODO', title='Skip Depth'
    )
    list_styles: Optional[List[ListStyle]] = Field(
        None,
        alias='list-styles',
        description='CSS list styles used for <li> elements.',
        min_length=1,
        title='List Styles',
    )
    include_top_link: Optional[bool] = Field(
        False, alias='include-top-link', description='TODO', title='Inlude Top Link'
    )


class PrincipalsAllowed(BaseModel):
    view: Optional[str] = None
    edit: Optional[str] = None


class Page(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    uuid: Optional[UUID] = Field(None, title='UUID')
    title: Optional[constr(min_length=3)] = Field(
        None, description='Title for the item', title='Title'
    )
    date_created: Optional[Union[AwareDatetime, date]] = Field(
        None, title='Date Created'
    )
    submitted_by: Optional[str] = Field(None, title='Submitted By')
    status: Optional[Status] = Field('in review', title='Status')
    schema_version: Optional[constr(pattern=r'^\\d+(\\.\\d+)*$')] = Field(
        '1', title='Schema Version'
    )
    last_modified: Optional[LastModified] = Field(None, title='Last Modified')
    description: Optional[str] = Field(
        None, description='Plain text description of the item', title='Description'
    )
    identifier: constr(pattern=r'^([A-Za-z0-9_-]+/)*[A-Za-z0-9_-]+$', min_length=2) = (
        Field(
            ..., description='Unique, identifying name for the item', title='Identifier'
        )
    )
    submission_centers: Optional[List[str]] = Field(
        None,
        description='Submission Centers that created this item.',
        title='Generated By',
    )
    consortia: Optional[List[str]] = Field(
        None, description='Consortia associated with this item.', title='Consortia'
    )
    aliases: Optional[List[Alias]] = Field(
        None,
        description='Institution-specific ID (e.g. bgm:cohort-1234-a).',
        title='Aliases',
    )
    children: Optional[List[str]] = Field(None, min_length=1, title='Child Pages')
    content: Optional[List[str]] = Field(
        None,
        description='Sections used to compose the static page',
        min_length=1,
        title='Content Sections',
    )
    redirect: Optional[Redirect] = Field(None, title='Redirect')
    table_of_contents: Optional[TableOfContents] = Field(
        None, alias='table-of-contents', title='Table of Contents'
    )
    field_id: Optional[str] = Field(None, alias='@id', title='ID')
    field_type: Optional[List[str]] = Field(None, alias='@type', title='Type')
    principals_allowed: Optional[PrincipalsAllowed] = Field(
        None,
        description='Calculated permissions used for ES filtering',
        title='principals_allowed',
    )
    display_title: Optional[str] = Field(None, title='Display Title')
