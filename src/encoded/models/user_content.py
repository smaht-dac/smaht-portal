# generated by datamodel-codegen:
#   filename:  user_content.json
#   timestamp: 2024-03-15T18:19:20+00:00

from __future__ import annotations

from datetime import date
from enum import Enum
from typing import List, Optional, Union
from uuid import UUID

from pydantic import AwareDatetime, BaseModel, ConfigDict, Field, RootModel, constr


class Status(Enum):
    public = 'public'
    shared = 'shared'
    current = 'current'
    inactive = 'inactive'
    in_review = 'in review'
    deleted = 'deleted'


class LastModified(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    date_modified: Optional[Union[AwareDatetime, date]] = Field(
        None,
        description='Do not submit, value is assigned by the server. The date the object is modified.',
        title='Date Modified',
    )
    modified_by: Optional[str] = Field(
        None,
        description='Do not submit, value is assigned by the server. The user that modfied the object.',
        title='Modified By',
    )


class Alias(RootModel[constr(pattern=r'^[^\\s\\\\\\/]+:[^\\s\\\\\\/]+$')]):
    root: constr(pattern=r'^[^\\s\\\\\\/]+:[^\\s\\\\\\/]+$') = Field(
        ...,
        description='Institution-specific ID (e.g. bgm:cohort-1234-a).',
        title='ID Alias',
    )


class Options(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    collapsible: Optional[bool] = Field(
        False,
        description='Whether this StaticSection should be collapsible (wherever collapsibility is an option). This property is ignored in some places, e.g. lists where all sections are explicitly collapsible.',
        title='Is Collapsible',
    )
    default_open: Optional[bool] = Field(
        True,
        description="Whether this StaticSection should appear as expanded by default (in places where it may be collapsible). Does not necessarily depend on 'collapsible' being true, e.g. in lists where all sections are explicitly collapsible.",
        title='Is Expanded by Default',
    )
    title_icon: Optional[str] = Field(
        None,
        description='Icon to be showed next to title in selected places.',
        title='Title Icon',
    )
    image: Optional[str] = Field(
        None,
        description='Image or screenshot URL for this Item to use as a preview.',
        title='Preview Image',
    )


class PrincipalsAllowed(BaseModel):
    view: Optional[str] = None
    edit: Optional[str] = None


class UserContent(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    uuid: Optional[UUID] = Field(None, title='UUID')
    title: Optional[constr(min_length=3)] = Field(
        None, description='Title for the item', title='Title'
    )
    date_created: Optional[Union[AwareDatetime, date]] = Field(
        None, title='Date Created'
    )
    submitted_by: Optional[str] = Field(None, title='Submitted By')
    status: Optional[Status] = Field('current', title='Status')
    schema_version: Optional[constr(pattern=r'^\\d+(\\.\\d+)*$')] = Field(
        '1', title='Schema Version'
    )
    last_modified: Optional[LastModified] = Field(None, title='Last Modified')
    identifier: constr(pattern=r'^[A-Za-z0-9-_]+$', min_length=2) = Field(
        ..., description='Unique, identifying name for the item', title='Identifier'
    )
    description: Optional[str] = Field(
        None, description='Plain text description of the item', title='Description'
    )
    submission_centers: Optional[List[str]] = Field(
        None,
        description='Submission Centers that created this item.',
        title='Generated By',
    )
    consortia: Optional[List[str]] = Field(
        None, description='Consortia associated with this item.', title='Consortia'
    )
    aliases: Optional[List[Alias]] = Field(
        None,
        description='Institution-specific ID (e.g. bgm:cohort-1234-a).',
        title='Aliases',
    )
    options: Optional[Options] = Field(
        None, description='Options for section display.', title='Options'
    )
    field_id: Optional[str] = Field(None, alias='@id', title='ID')
    field_type: Optional[List[str]] = Field(None, alias='@type', title='Type')
    principals_allowed: Optional[PrincipalsAllowed] = Field(
        None,
        description='Calculated permissions used for ES filtering',
        title='principals_allowed',
    )
    display_title: Optional[str] = Field(None, title='Display Title')
    content_as_html: Optional[str] = Field(
        None,
        description='Convert RST, HTML and MD content into HTML',
        title='Content as HTML',
    )
