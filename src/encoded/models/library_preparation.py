# generated by datamodel-codegen:
#   filename:  library_preparation.json
#   timestamp: 2024-03-15T18:19:17+00:00

from __future__ import annotations

from datetime import date
from enum import Enum
from typing import List, Optional, Union
from uuid import UUID

from pydantic import AwareDatetime, BaseModel, ConfigDict, Field, RootModel, constr


class Tag(RootModel[constr(pattern=r'^[a-zA-Z0-9_-]+$', min_length=1, max_length=50)]):
    root: constr(pattern=r'^[a-zA-Z0-9_-]+$', min_length=1, max_length=50) = Field(
        ..., description='A tag for the item.', title='Tag'
    )


class Status(Enum):
    public = 'public'
    draft = 'draft'
    released = 'released'
    in_review = 'in review'
    obsolete = 'obsolete'
    deleted = 'deleted'
    restricted = 'restricted'


class LastModified(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    date_modified: Optional[Union[AwareDatetime, date]] = Field(
        None,
        description='Do not submit, value is assigned by the server. The date the object is modified.',
        title='Date Modified',
    )
    modified_by: Optional[str] = Field(
        None,
        description='Do not submit, value is assigned by the server. The user that modfied the object.',
        title='Modified By',
    )


class AdapterInclusionMethodEnum(Enum):
    Ligation = 'Ligation'
    Tagmentation = 'Tagmentation'
    Not_Applicable = 'Not Applicable'


class AmplificationMethodEnum(Enum):
    PCR = 'PCR'
    MALBAC = 'MALBAC'
    PTA = 'PTA'
    MDA = 'MDA'
    Not_Applicable = 'Not Applicable'


class AssayNameEnum(Enum):
    WGS = 'WGS'
    RNA_Seq = 'RNA-Seq'
    NanoSeq = 'NanoSeq'
    CODEC = 'CODEC'
    Duplex_Sequencing = 'Duplex Sequencing'
    FiberSeq = 'FiberSeq'
    ATAC_Seq = 'ATAC-Seq'
    ScRNA_Seq = 'ScRNA-Seq'
    DLP_ = 'DLP+'
    MAS_Seq = 'MAS-Seq'
    STORM_Seq = 'STORM-Seq'


class FragmentationMethodEnum(Enum):
    Sonication = 'Sonication'
    Restriction_Enzyme = 'Restriction Enzyme'
    Transposase = 'Transposase'
    Not_Applicable = 'Not Applicable'


class InsertSelectionMethodEnum(Enum):
    Affinity_Enrichment = 'Affinity Enrichment'
    Hybrid_Selection = 'Hybrid Selection'
    PCR = 'PCR'
    PolyT_Enrichment = 'PolyT Enrichment'
    RRNA_Depletion = 'RRNA Depletion'
    Not_applicable = 'Not applicable'


class SizeSelectionMethodEnum(Enum):
    Gel_Electrophoresis = 'Gel Electrophoresis'
    Magnetic_Beads = 'Magnetic Beads'
    Not_Applicable = 'Not Applicable'


class Strand(Enum):
    Unstranded = 'Unstranded'
    First_Stranded = 'First Stranded'
    Second_Stranded = 'Second Stranded'
    Not_Applicable = 'Not Applicable'


class PrincipalsAllowed(BaseModel):
    view: Optional[str] = None
    edit: Optional[str] = None


class LibraryPreparation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    uuid: Optional[UUID] = Field(None, title='UUID')
    tags: Optional[List[Tag]] = Field(
        None,
        description='Key words that can tag an item - useful for filtering.',
        title='Tags',
    )
    submitted_id: constr(
        pattern=r'^[A-Z0-9]{3,}_LIBRARY-PREPARATION_[A-Z0-9-_.]{4,}$'
    ) = Field(..., description='Identifier on submission', title='Submitter ID')
    date_created: Optional[Union[AwareDatetime, date]] = Field(
        None, title='Date Created'
    )
    submitted_by: Optional[str] = Field(None, title='Submitted By')
    status: Optional[Status] = Field('in review', title='Status')
    schema_version: Optional[constr(pattern=r'^\\d+(\\.\\d+)*$')] = Field(
        '1', title='Schema Version'
    )
    last_modified: Optional[LastModified] = Field(None, title='Last Modified')
    submission_centers: List[str] = Field(
        ...,
        description='Submission Centers that created this item.',
        title='Generated By',
    )
    consortia: Optional[List[str]] = Field(
        None, description='Consortia associated with this item.', title='Consortia'
    )
    accession: Optional[str] = Field(
        None,
        description='A unique identifier to be used to reference the object.',
        title='Accession',
    )
    alternate_accessions: Optional[List[str]] = Field(
        None,
        description='Accessions previously assigned to objects that have been merged with this object.',
        title='Alternate Accessions',
    )
    adapter_inclusion_method: Optional[List[AdapterInclusionMethodEnum]] = Field(
        None,
        description='Method of library preparation from an analyte',
        min_length=1,
        title='Adapter Inclusion Method',
    )
    amplification_method: Optional[List[AmplificationMethodEnum]] = Field(
        None,
        description='Amplification method used to increase library products',
        min_length=1,
        title='Amplification Method',
    )
    assay_name: List[AssayNameEnum] = Field(
        ...,
        description='Name of experimental approach',
        min_length=1,
        title='Assay Name',
    )
    fragmentation_method: Optional[List[FragmentationMethodEnum]] = Field(
        None,
        description='Method used for nucleotide fragmentation',
        min_length=1,
        title='Fragmentation Method',
    )
    insert_selection_method: Optional[List[InsertSelectionMethodEnum]] = Field(
        None,
        description='Method for selecting inserts included in library',
        min_length=1,
        title='Insert Selection Method',
    )
    size_selection_method: Optional[List[SizeSelectionMethodEnum]] = Field(
        None,
        description='Method for selecting fragment sizes',
        min_length=1,
        title='Size Selection Method',
    )
    strand: Optional[Strand] = Field(
        None, description='Library stranded-ness', title='Strand'
    )
    target_fragment_length: Optional[int] = Field(
        None,
        description='Desired fragment length for the library',
        title='Target Fragment Length',
    )
    target_insert_length: Optional[int] = Field(
        None,
        description='Desired insert length for the library',
        title='Target Insert Length',
    )
    trim_adapter_sequence: Optional[bool] = Field(
        None,
        description='Whether trimming adapter sequence is recommended',
        title='Trim Adapter Sequence',
    )
    preparation_kits: Optional[List[str]] = Field(
        None,
        description='Links to associated preparation kits',
        min_length=1,
        title='Preparation Kits',
    )
    treatments: Optional[List[str]] = Field(
        None,
        description='Link to associated treatments performed during library preparation',
        min_length=1,
        title='Treatments',
    )
    field_id: Optional[str] = Field(None, alias='@id', title='ID')
    field_type: Optional[List[str]] = Field(None, alias='@type', title='Type')
    principals_allowed: Optional[PrincipalsAllowed] = Field(
        None,
        description='Calculated permissions used for ES filtering',
        title='principals_allowed',
    )
    display_title: Optional[str] = Field(None, title='Display Title')
