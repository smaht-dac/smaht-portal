# generated by datamodel-codegen:
#   filename:  tissue_collection.json
#   timestamp: 2024-03-15T18:19:19+00:00

from __future__ import annotations

from datetime import date
from enum import Enum
from typing import List, Optional, Union
from uuid import UUID

from pydantic import (
    AwareDatetime,
    BaseModel,
    ConfigDict,
    Field,
    RootModel,
    confloat,
    constr,
)


class Tag(RootModel[constr(pattern=r'^[a-zA-Z0-9_-]+$', min_length=1, max_length=50)]):
    root: constr(pattern=r'^[a-zA-Z0-9_-]+$', min_length=1, max_length=50) = Field(
        ..., description='A tag for the item.', title='Tag'
    )


class Status(Enum):
    public = 'public'
    draft = 'draft'
    released = 'released'
    in_review = 'in review'
    obsolete = 'obsolete'
    deleted = 'deleted'
    restricted = 'restricted'


class LastModified(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    date_modified: Optional[Union[AwareDatetime, date]] = Field(
        None,
        description='Do not submit, value is assigned by the server. The date the object is modified.',
        title='Date Modified',
    )
    modified_by: Optional[str] = Field(
        None,
        description='Do not submit, value is assigned by the server. The user that modfied the object.',
        title='Modified By',
    )


class BloodCulturesAvailable(Enum):
    Yes = 'Yes'
    No = 'No'
    Unknown = 'Unknown'


class CollectionSite(Enum):
    TBD = 'TBD'


class CoreBodyTemperatureLocation(Enum):
    Axilla = 'Axilla'
    Anus = 'Anus'


class DonorType(Enum):
    TBD = 'TBD'


class OrganTransplant(Enum):
    Yes = 'Yes'
    No = 'No'
    Unknown = 'Unknown'


class OrgansTransplantedEnum(Enum):
    Cornea = 'Cornea'
    Heart = 'Heart'
    Intestine = 'Intestine'
    Kidney = 'Kidney'
    Liver = 'Liver'
    Lung = 'Lung'
    Pancreas = 'Pancreas'
    Skin = 'Skin'


class RefrigerationPriorToProcurement(Enum):
    Yes = 'Yes'
    No = 'No'
    Unknown = 'Unknown'


class VentilatorLessThan24Hours(Enum):
    Yes = 'Yes'
    No = 'No'
    Unknown = 'Unknown'


class PrincipalsAllowed(BaseModel):
    view: Optional[str] = None
    edit: Optional[str] = None


class TissueCollection(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    uuid: Optional[UUID] = Field(None, title='UUID')
    tags: Optional[List[Tag]] = Field(
        None,
        description='Key words that can tag an item - useful for filtering.',
        title='Tags',
    )
    submitted_id: constr(
        pattern=r'^[A-Z0-9]{3,}_TISSUE-COLLECTION_[A-Z0-9-_.]{4,}$'
    ) = Field(..., description='Identifier on submission', title='Submitter ID')
    date_created: Optional[Union[AwareDatetime, date]] = Field(
        None, title='Date Created'
    )
    submitted_by: Optional[str] = Field(None, title='Submitted By')
    status: Optional[Status] = Field('in review', title='Status')
    schema_version: Optional[constr(pattern=r'^\\d+(\\.\\d+)*$')] = Field(
        '1', title='Schema Version'
    )
    protocols: Optional[List[str]] = Field(
        None,
        description='Protocols providing experimental details',
        min_length=1,
        title='Protocols',
    )
    last_modified: Optional[LastModified] = Field(None, title='Last Modified')
    submission_centers: List[str] = Field(
        ...,
        description='Submission Centers that created this item.',
        title='Generated By',
    )
    consortia: Optional[List[str]] = Field(
        None, description='Consortia associated with this item.', title='Consortia'
    )
    accession: Optional[str] = Field(
        None,
        description='A unique identifier to be used to reference the object.',
        title='Accession',
    )
    alternate_accessions: Optional[List[str]] = Field(
        None,
        description='Accessions previously assigned to objects that have been merged with this object.',
        title='Alternate Accessions',
    )
    blood_cultures_available: Optional[BloodCulturesAvailable] = Field(
        None,
        description='Whether blood cultures were drawn during tissue collection',
        title='Blood Cultures Available',
    )
    chest_incision_datetime: Optional[AwareDatetime] = Field(
        None,
        description='Date and time of chest incision for tissue collection',
        title='Chest Incision Time',
    )
    collection_site: Optional[CollectionSite] = Field(
        None, description='Site of tissue collection', title='Collection Site'
    )
    core_body_temperature: Optional[confloat(ge=0.0)] = Field(
        None,
        description='Body temperature of the donor during tissue collection in degrees Celsius',
        title='Core Body Temperature',
    )
    core_body_temperature_location: Optional[CoreBodyTemperatureLocation] = Field(
        None,
        description='Location of body temperature measurement for the donor during tissue collection',
        title='Core Body Temperature Location',
    )
    cross_clamp_applied_datetime: Optional[AwareDatetime] = Field(
        None,
        description='Date and time when cross clamp was applied during tissue collection',
        title='Cross Clamp Applied Time',
    )
    donor_type: Optional[DonorType] = Field(None, title='Donor Type')
    ischemic_time: Optional[confloat(ge=0.0)] = Field(
        None,
        description='Time interval in minutes of ischemia for tissue collection',
        title='Ischemic Time',
    )
    organ_transplant: Optional[OrganTransplant] = Field(
        None,
        description='Whether the donor had organs removed for transplant',
        title='Organ Transplant',
    )
    organs_transplanted: Optional[List[OrgansTransplantedEnum]] = Field(
        None,
        description='The organs of the donor that were transplanted',
        min_length=1,
        title='Organs Transplanted',
    )
    recovery_kit_id: Optional[str] = Field(
        None,
        description='Identifier of the tissue recovery kit',
        title='Recovery Kit Id',
    )
    refrigeration_prior_to_procurement: Optional[RefrigerationPriorToProcurement] = (
        Field(
            None,
            description='Whether the donor was refrigerated prior to tissue collection',
            title='Refrigeration Prior To Procurement',
        )
    )
    refrigeration_prior_to_procurement_time: Optional[confloat(ge=0.0)] = Field(
        None,
        description='Interval of time in hours the donor was refrigerated prior to tissue collection',
        title='Refrigeration Prior To Procurement Time',
    )
    ventilator_less_than_24_hours: Optional[VentilatorLessThan24Hours] = Field(
        None,
        description='Whether donor was on a ventilator less than 24 hours prior to tissue collection',
        title='Ventilator Less Than 24 Hours',
    )
    donor: str = Field(..., description='Link to the associated donor', title='Donor')
    field_id: Optional[str] = Field(None, alias='@id', title='ID')
    field_type: Optional[List[str]] = Field(None, alias='@type', title='Type')
    principals_allowed: Optional[PrincipalsAllowed] = Field(
        None,
        description='Calculated permissions used for ES filtering',
        title='principals_allowed',
    )
    display_title: Optional[str] = Field(None, title='Display Title')
