'use strict';

import React, { useEffect } from 'react';
import {
    DotRouter,
    DotRouterTab,
} from '@hms-dbmi-bgm/shared-portal-components/es/components/ui/DotRouter';
import { FileOverviewTableController } from './FileOverviewTable';

/**
 * DotRouterTab content for displaying the files in the same file set as the
 * current file. Separates the files into those generated by the DAC and those
 * generated externally.
 */
const AssociatedFilesTab = (props) => {
    const { context } = props;
    // Create a search href for file associated
    const fileSetUuids = context?.file_sets
        ?.map((fs) => fs.uuid)
        ?.join('&file_sets.uuid=');
    const associatedFilesSearchHref = `/search/?type=File&file_format.display_title=bam&uuid!=${props.context.uuid}&file_sets.uuid=${fileSetUuids}`;

    const DACGeneratedFiles =
        associatedFilesSearchHref + '&submission_centers.display_title=HMS DAC';

    const ExternallyGeneratedFiles =
        associatedFilesSearchHref +
        '&submission_centers.display_title!=HMS DAC';

    return (
        <div className="content associated-files">
            <FileOverviewTableController
                {...props}
                embeddedTableHeaderText="DAC Generated Files"
                associatedFilesSearchHref={DACGeneratedFiles}
            />
            <FileOverviewTableController
                {...props}
                embeddedTableHeaderText="Externally Generated Files"
                associatedFilesSearchHref={ExternallyGeneratedFiles}
            />
        </div>
    );
};

// DotRouterTab content for displaying QC information for the current file.
const QCOverviewTab = ({ context }) => {
    return <h2 className="tab-coming-soon">Coming soon</h2>;
};

// DotRouterTab content for displaying Analysis information for the current file.
const AnalysisInformationTab = ({ context }) => {
    return <h2 className="tab-coming-soon">Coming soon</h2>;
};

export const FileViewTabs = (props) => {
    useEffect(() => {}, [props.href]);

    return (
        <div className="tabs-container">
            <DotRouter
                href={props.href}
                navClassName=""
                isActive={true}
                prependDotPath="file-overview">
                <DotRouterTab
                    dotPath=".associated-files"
                    tabTitle="Associated Files"
                    arrowTabs={false}
                    default>
                    <AssociatedFilesTab {...props} />
                </DotRouterTab>
                <DotRouterTab
                    dotPath=".analysis-information"
                    tabTitle="Analysis Information"
                    arrowTabs={false}>
                    <AnalysisInformationTab />
                </DotRouterTab>
                <DotRouterTab
                    dotPath=".qc-overview"
                    tabTitle="QC Overview"
                    arrowTabs={false}>
                    <QCOverviewTab />
                </DotRouterTab>
            </DotRouter>
        </div>
    );
};
