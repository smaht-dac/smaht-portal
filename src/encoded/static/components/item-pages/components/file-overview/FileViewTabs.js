'use strict';

import React, { useEffect } from 'react';
import {
    DotRouter,
    DotRouterTab,
} from '@hms-dbmi-bgm/shared-portal-components/es/components/ui/DotRouter';
import { FileOverviewTableController } from './FileOverviewTable';
import { VcfComparatorTable } from './VcfComparatorTable';

/**
 * DotRouterTab content for displaying the files in the same file set as the
 * current file. Separates the files into those generated by the DAC and those
 * generated externally.
 */
const AssociatedFilesTab = (props) => {
    const { context = {} } = props;
    const fileSets = context?.file_sets || [];

    // Create a search href for retrieving BAM files in the same file set
    let DACGeneratedFilesHref, ExternallyGeneratedFilesHref;

    if (fileSets.length > 0) {
        const fileSetUuids = context?.file_sets
            ?.map((fs) => fs.uuid)
            ?.join('&file_sets.uuid=');
        const associatedFilesSearchHref = `/search/?type=File&file_format.display_title=bam&uuid!=${props.context.uuid}&file_sets.uuid=${fileSetUuids}`;

        DACGeneratedFilesHref =
            associatedFilesSearchHref +
            '&submission_centers.display_title=HMS DAC';

        ExternallyGeneratedFilesHref =
            associatedFilesSearchHref +
            '&submission_centers.display_title!=HMS DAC';
    }

    return (
        <div className="content associated-files">
            {fileSets.length > 0 ? (
                <>
                    <FileOverviewTableController
                        {...props}
                        embeddedTableHeaderText="DAC Generated Files"
                        associatedFilesSearchHref={DACGeneratedFilesHref}
                    />
                    <FileOverviewTableController
                        {...props}
                        embeddedTableHeaderText="Externally Generated Files"
                        associatedFilesSearchHref={ExternallyGeneratedFilesHref}
                    />
                </>
            ) : (
                <div className="no-results">
                    <div className="no-results-content">
                        <i className="icon icon-folder-open fas"></i>
                        <h3 className="header">No Associated Files Found</h3>
                        <span className="subheader">
                            There are no DAC generated or externally generated
                            BAM files associated with this file
                        </span>
                    </div>
                </div>
            )}
        </div>
    );
};

// DotRouterTab content for displaying Analysis information for the current file.
const AnalysisInformationTab = ({ context }) => {
    return (
        <div className="no-results">
            <div className="no-results-content">
                <i className="icon icon-network-wired fas"></i>
                <h3 className="header">Analysis Information Coming Soon</h3>
                <span className="subheader">
                    Check back for updates on Analysis Information development
                    with future portal releases
                </span>
            </div>
        </div>
    );
};

// DotRouterTab content for displaying QC information for the current file.
const QCOverviewTab = ({ context }) => {
    return (
        <div className="no-results">
            <div className="no-results-content">
                <i className="icon icon-chart-area fas"></i>
                <h3 className="header">QC Overview Coming Soon</h3>
                <span className="subheader">
                    Check back for updates on QC Overview development with
                    future portal releases
                </span>
            </div>
        </div>
    );
};

export const FileViewTabs = (props) => {
    return (
        <div className="tabs-container">
            <DotRouter
                href={props.href}
                navClassName=""
                isActive={true}
                prependDotPath="file-overview">
                <DotRouterTab
                    dotPath=".analysis-information"
                    tabTitle="Analysis Information"
                    arrowTabs={false}
                    default>
                    <AnalysisInformationTab {...props} />
                </DotRouterTab>
                <DotRouterTab
                    dotPath=".qc-overview"
                    tabTitle="QC Overview"
                    arrowTabs={false}>
                    <QCOverviewTab />
                </DotRouterTab>
                <DotRouterTab
                    dotPath=".associated-files"
                    tabTitle="Associated Files"
                    arrowTabs={false}>
                    <AssociatedFilesTab {...props} />
                </DotRouterTab>
            </DotRouter>
        </div>
    );
};
